---
title: "Design 1. Leveraging Prior Knowledge for Improved Retention Prediction in Reversed-Phase HPLC"
author:
  - name: "Paweł Wiczling*"
    affiliations:
      - name: "Department of Biopharmaceutics and Pharmacodynamics, Medical University of Gdańsk, Gen. J. Hallera 107, 80-416 Gdańsk, Poland"
date: "`r format(Sys.Date())`"
format:
  html:
    theme: cosmo
    toc: true
    code-fold: true  
    code-tools: true
    fig-width: 7
    fig-height: 7
---

```{r setuphtml, include=FALSE}
knitr::opts_chunk$set(cache=TRUE, message=FALSE, error=FALSE, warning=FALSE, comment=NA, out.width='95%')
```

# Setup
```{r setup}
library(cmdstanr)
library(pracma)
library(numDeriv)
library(dplyr)
library(ggplot2)
library(mvtnorm)
library(tidyr)
library(purrr)
library(mrgmisc)
library(patchwork)
library(stringr)
library(reshape2)
library(here)
library(tibble)
library(flextable)
select = dplyr::select
#usethis::create_github_token()
# remotes::install_github("metrumresearchgroup/mrgmisc")
# for parallel calculation use linux (mclaplly), i.e. Ubuntu 24.04 on Windows WSL
#' Helper functions
source("helper_functions.R")
```

```{r paths}
#' folder shortcuts:
figures_dir1 <- here("deliv", "figures", "design1","N")
tables_dir1  <- here("deliv", "tables", "design1","N")
figures_dir2 <- here("deliv", "figures", "design1","NI")
tables_dir2  <- here("deliv", "tables", "design1","NI")
figures_dir3 <- here("deliv", "figures", "design1","MeOH")
tables_dir3  <- here("deliv", "tables", "design1","MeOH")
figures_dir4 <- here("deliv", "figures", "design1","ACN")
tables_dir4  <- here("deliv", "tables", "design1","ACN")

figures_dir5 <- here("deliv", "figures", "manuscript")
tables_dir5  <- here("deliv", "tables", "manuscript")

if (!file.exists(figures_dir1)) dir.create(figures_dir1, recursive = T)
if (!file.exists(tables_dir1)) dir.create(tables_dir1, recursive = T)
if (!file.exists(figures_dir2)) dir.create(figures_dir2, recursive = T)
if (!file.exists(tables_dir2)) dir.create(tables_dir2, recursive = T)
if (!file.exists(figures_dir3)) dir.create(figures_dir3, recursive = T)
if (!file.exists(tables_dir3)) dir.create(tables_dir3, recursive = T)
if (!file.exists(figures_dir4)) dir.create(figures_dir4, recursive = T)
if (!file.exists(tables_dir4)) dir.create(tables_dir4, recursive = T)
if (!file.exists(figures_dir5)) dir.create(figures_dir5, recursive = T)
if (!file.exists(tables_dir5)) dir.create(tables_dir5, recursive = T)


thisScript <- "optimal-design-for-mixtures-design1"
```

```{r helper-save-functions}
my.ggsave <- function(.plot, .filename, .path=figures_dir, .height= 7, .width= 6) {
ggsave(plot=.plot, filename=.filename, path=.path, height=.height, width=.width)
}
my.ggsave.png <- function(.plot, .filename, .path=figures_dir, .height=7, .width= 6) {
ggsave(plot=.plot, filename=.filename, path=.path, height=.height, width=.width)
}
```

# Introduction

# Priors

Priors are based on the following article "Comparison of Chromatographic Stationary Phases Using a Bayesian-Based Multilevel Model" by Paweł Wiczling and Agnieszka Kamedulska published in Analytical Chemistry 2024 96 (3), 1310-1319. In this work a simplified approach is taken with the focus on the neutral, acidic and basic forms of analytes and a single chromatographic stationary phase (Xbridge), assuming the pKa and changes of pKa with organic modifier are known.

```{r literature-priors}
# fun_generate_priors defined in helper_functions.R
priorsN_MeOH=fun_generate_priors("N_MeOH", logP=2.2)
priorsN_ACN=fun_generate_priors("N_ACN", logP=2.2)
priorsN=fun_generate_priors("N", logP=2.2)
priorsA=fun_generate_priors("A", logP=2.2)
priorsB=fun_generate_priors("B", logP=2.2)
priorsNB=fun_generate_priors("NB", logP=2.2)
priorsNA=fun_generate_priors("NA", logP=2.2)

pNA=as.data.frame(priorsNA)%>%
  mutate(parameter=c("logkwN","S1N","dS1","dlogkwA","dS1A","ddS1A"), .before = p)%>%
  select(-p, -msigma_sqaure, -starts_with("S_inv"))%>%
  mutate(group = "Acids")

pNB = as.data.frame(priorsNB)%>%
   mutate(parameter=c("logkwN","S1N","dS1","dlogkwB","dS1B","ddS1B"), .before = p)%>%
  select(-p, -msigma_sqaure, -starts_with("S_inv")) %>%
  mutate(group = "Bases")

rbind(pNA, pNB)%>%
  as_grouped_data(groups = "group") %>%
  flextable() %>%
  colformat_double(digits = 2, na_str = " ")

```

# Design space

Here I consider a design space that consist of linear organic modifier gradients ranging from 10 to 270 min and organic modifier content ranging from 0.05 to 0.2 for MeOH and ACN.

```{r design-space}
hplcparam_candidates_df = expand_grid(tg=seq(10,270,by=10), 
                                          td=2.1, 
                                          to=0.532,
                                          te=0.04, 
                                          fio = seq(0.05, 0.2, by=0.05),
                                          fif = 0.8,
                                          m=c(0,1),
                                          xpH=c(0,1))
```

# Read the results
```{r load-results}
# to avoid recalculations
load(file = "../data/results-mixtures.RData")
```

# Stan multiple analytes. Single form analytes. fi and tg for MeOH and ACN as design variables
## Compile stan models
```{r single-form-analytes-compilation}
mod_analytes_gq= cmdstan_model("../stan/hplc-gra-single-form-analytes-gq.stan", stanc_options = list("O1"))
mod_analytes_sim = cmdstan_model("../stan/hplc-gra-single-form-analytes-sim.stan", stanc_options = list("O1"))
mod_analytes = cmdstan_model("../stan/hplc-gra-single-form-analytes.stan", stanc_options = list("O1"))
mod_analytes$compile(compile_model_methods=TRUE,force_recompile=TRUE)
```

## Simulate retention times and create datasets

The simulation involved n = 500 analytes with log P and analyte type (acid and base) drawn at random from the following distributions:  $logP_i \sim normal(2,2.2)$ and $Analyte_i \sim categorical(A=0.5,B=0.5)$. Log P values were truncated within 0.5 and 7. For single pH scenarios the analyte form distribution was 40% for neutral, 30% for acidic, and 30% for basic form. 
  
```{r single-form-analytes-simulations}
data_ma=hplcparam_candidates_df%>%filter(xpH==0)
nObs = nrow(data_ma);
nAnalytes =50;
cseed = 1234;
n_param = 3;
n_rep = 10;

datastruct_noprior_ma=list()
datastruct_prior_ma=list()
inits = list()

for (i in 1:n_rep) {
datastruct_prior_ma[[i]] = list(nObs=nObs,
                   nAnalytes=nAnalytes,
                   steps = 4 + 6*data_ma$m,
                   hplcparam=as.matrix(data_ma%>%dplyr::select(c(tg,td,to,te,fio,fif,m))),
                   include_prior = 1,
                   run_estimation=1,
                   nSel = nObs,
                   selected = 1:nObs)

fit_gq  = mod_analytes_gq$sample(data = datastruct_prior_ma[[i]],
                                         seed = cseed,
                                         fixed_param = TRUE,
                                         chains = 1,
                                         iter_sampling=1)

datastruct_prior_ma[[i]]$trobs = matrix(fit_gq$draws(format = "matrix", variable = "y_hat_sim"),nAnalytes,nObs)
datastruct_prior_ma[[i]]$logPobs = fit_gq$draws(format = "matrix", variable = "logPobs")[1:nAnalytes]
datastruct_prior_ma[[i]]$N1A2B3 = fit_gq$draws(format = "matrix", variable = "N1A2B3")[1:nAnalytes]
param = matrix(fit_gq$draws(format = "matrix", variable = "paramsim"),nAnalytes,3)


datastruct_noprior_ma[[i]]=datastruct_prior_ma[[i]];
datastruct_noprior_ma[[i]]$include_prior = 0.01;

inits[[i]]=param

cseed = cseed+1
}

mean_log_det_stan = function(data, init, chosen_indices, S){
  
init_ma = function(){list(param=init)}
  
data$selected = chosen_indices;
data$nSel = length(chosen_indices);

 fit_opt  = mod_analytes$optimize(
   data = data,
   output_dir = here::here("stanfiles"),
   output_basename = S,
   seed = cseed,
   init = init_ma,
   jacobian = TRUE,
   show_messages = F)
 
 mode=fit_opt$unconstrain_variables(list(param = fit_opt$mle("param")))
 hessian = fit_opt$hessian(unconstrained_variables = mode)$hessian

logdet = unlist(purrr::map(1:data$nAnalytes,\(i) log(det(-hessian[((i-1)*3+1):((i-1)*3+3),((i-1)*3+1):((i-1)*3+3)]))))

return(logdet)
}

chosen_indices = c(65,66,209,210)

# quick test:
z_prior = parallel::mclapply(1:n_rep,\(i) mean_log_det_stan(datastruct_prior_ma[[i]], inits[[i]], chosen_indices, i), mc.cores=10)
z_noprior = parallel::mclapply(1:n_rep,\(i) mean_log_det_stan(datastruct_noprior_ma[[i]], inits[[i]], chosen_indices, i), mc.cores=10)
test = c(mean(unlist(z_prior)),mean(unlist(z_noprior)))
test
cat("18.32752 17.55349")

logP = unlist(purrr::map(1:length(datastruct_noprior_ma),\(i) datastruct_noprior_ma[[i]]$logPobs))
NAB = unlist(purrr::map(1:length(datastruct_noprior_ma),\(i) datastruct_noprior_ma[[i]]$N1A2B3))
```

## Optimization
```{r single-form-analytes-optimization, eval=FALSE}
chosen_indices = c(1,2) # initial values
fws_prior_2 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices, n_iter = 100)

chosen_indices = c(210,209,79) # initial values
fws_prior_3 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices, n_iter = 100)
chosen_indices = c(210,209,79) # initial values
fws_noprior_3 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_noprior_ma, inits, chosen_indices, n_iter = 100)

chosen_indices = c(209,212,215,71) # initial values
fws_prior_4 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices, n_iter = 100)
chosen_indices = c(209,212,215,71) # initial values
fws_noprior_4 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_noprior_ma, inits, chosen_indices, n_iter = 100)

chosen_indices = c(210,209,212,215,71) # initial values
fws_prior_5 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices, n_iter = 100)
chosen_indices = c(210,209,212,215,71) # initial values
fws_noprior_5 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_noprior_ma, inits, chosen_indices, n_iter = 100)
```

### Read the results and compare
```{r single-form-analytes-logDet-summary}
chosen_indices_prior = c(65,66,209,210) # ref
chosen_indices_noprior= c(65,66,209,210) # ref
fws_prior_ref = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices_prior, n_iter = 0)
fws_noprior_ref = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_noprior_ma, inits, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(209,212) # p=2
fws_prior_2 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices_prior, n_iter = 0)

chosen_indices_prior   = c(210,209,79) # p=3
chosen_indices_noprior = c(210,209,79) # p=3
fws_prior_3 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices_prior, n_iter = 0)
fws_noprior_3 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_noprior_ma, inits, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(209,210,215,79) # p=4
chosen_indices_noprior = c(209,210,215,71) # p=4
fws_prior_4 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices_prior, n_iter = 0)
fws_noprior_4 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_noprior_ma, inits, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior = c(210,209,212,215,79) # p=5
chosen_indices_noprior = c(210,209,212,215,71) # p=5
fws_prior_5 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_prior_ma, inits, chosen_indices_prior, n_iter = 0)
fws_noprior_5 = fedorov_wynn_stan_par(mean_log_det_stan, datastruct_noprior_ma, inits, chosen_indices_noprior, n_iter = 0)

summary_results = tibble( logP = logP,
                          Type = NAB,
                          prior_ref = fws_prior_ref$log_det_FIM,
                          noprior_ref = fws_noprior_ref$log_det_FIM,
                          prior_2 = fws_prior_2$log_det_FIM,
                          prior_3 = fws_prior_3$log_det_FIM,
                          noprior_3 = fws_noprior_3$log_det_FIM,
                          prior_4 = fws_prior_4$log_det_FIM,
                          noprior_4 = fws_noprior_4$log_det_FIM,
                          prior_5 = fws_prior_5$log_det_FIM,
                          noprior_5 = fws_noprior_5$log_det_FIM) %>%
  pivot_longer(prior_ref:noprior_5, names_to = "method")

p1<-ggplot(summary_results, aes(y=method,x=value))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=value, color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="log(|FIM|)", y = "Method")
p1
summary_results_diff = tibble(logP = logP,
                          Type = NAB,
                          fws_prior_ref = fws_prior_ref$log_det_FIM,
                          fws_noprior_ref = fws_noprior_ref$log_det_FIM,
                          fws_prior_2 = fws_prior_2$log_det_FIM,
                          fws_prior_3 = fws_prior_3$log_det_FIM,
                          fws_noprior_3 = fws_noprior_3$log_det_FIM,
                          fws_prior_4 = fws_prior_4$log_det_FIM,
                          fws_noprior_4 = fws_noprior_4$log_det_FIM,
                          fws_prior_5 = fws_prior_5$log_det_FIM,
                          fws_noprior_5 = fws_noprior_5$log_det_FIM) %>%
  mutate(d_prior_2 = (fws_prior_2 - fws_prior_ref)/n_param,
         d_prior_3 = (fws_prior_3 - fws_prior_ref)/n_param,
         d_noprior_3 = (fws_noprior_3 - fws_noprior_ref)/n_param,
         d_prior_4 = (fws_prior_4 - fws_prior_ref)/n_param,
         d_noprior_4 = (fws_noprior_4 - fws_noprior_ref)/n_param,
         d_prior_5 = (fws_prior_5 - fws_prior_ref)/n_param,
         d_noprior_5 = (fws_noprior_5 - fws_noprior_ref)/n_param)%>%
  pivot_longer(d_prior_2:d_noprior_5, names_to = "method")

p2=ggplot(summary_results_diff, aes(y=method,x=exp(value)))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=exp(value), color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="Efficiency relative to the reference design", y = "Method")+
  geom_vline(xintercept = 1, linetype = "dotted")

summary_results_diffprior = tibble(logP = logP,
                          Type = NAB,
                          fws_prior_ref = fws_prior_ref$log_det_FIM,
                          fws_noprior_ref = fws_noprior_ref$log_det_FIM,
                          fws_prior_3 = fws_prior_3$log_det_FIM,
                          fws_noprior_3 = fws_noprior_3$log_det_FIM,
                          fws_prior_4 = fws_prior_4$log_det_FIM,
                          fws_noprior_4 = fws_noprior_4$log_det_FIM,
                          fws_prior_5 = fws_prior_5$log_det_FIM,
                          fws_noprior_5 = fws_noprior_5$log_det_FIM) %>%
  mutate(d_ref  = (fws_prior_ref-fws_noprior_ref)/n_param,
         d_3 = (fws_prior_3-fws_noprior_3)/n_param,
         d_4 = (fws_prior_4-fws_noprior_4)/n_param,
         d_5 = (fws_prior_5-fws_noprior_5)/n_param)%>%
  pivot_longer(d_ref:d_5, names_to = "method")

p3=ggplot(summary_results_diffprior, aes(y=method,x=exp(value)))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=exp(value), color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="Effect of prior on design efficiency", y = "Method")+
  geom_vline(xintercept = 1, linetype = "dotted")+
  scale_x_continuous(limits = c(0.5,100),
                     trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.01, 100)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

my.ggsave(.plot=p1, .filename=paste("single-form-analytes-logdFIM-abs.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=p1, .filename=paste("single-form-analytes-logdFIM-abs.png"), .path = figures_dir1)
my.ggsave(.plot=p2, .filename=paste("single-form-analytes-logdFIM-rel.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=p2, .filename=paste("single-form-analytes-logdFIM-rel.png"), .path = figures_dir1)
my.ggsave(.plot=p3, .filename=paste("single-form-analytes-logdFIM-prioreff.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=p3, .filename=paste("single-form-analytes-logdFIM-prioreff.png"), .path = figures_dir1)


p1
p2
p3
f2_1 = p2
f3_1 = p3
```

### Table Summary
```{r table-single}
tab1=summary_results_diff %>% 
  mutate(value = exp(value)) %>%
  group_by(method) %>% 
  summarise(ptc_value = quantile(value, c(0.05, 0.5, 0.95)), q = c(0.05, 0.5, 0.95),
            mean_value = mean(value),
            sd_value = std(value)) %>%
  ungroup() %>%
  mutate(across(c('ptc_value', 'mean_value','sd_value'), round, 2))%>%
  pivot_wider(names_from = "q", values_from = ptc_value, names_prefix = "q")%>%
  mutate(`Efficiency median (5th-95th)` = paste0(q0.5, " (", q0.05, " - ", q0.95, ")"))%>%
  mutate(`Efficiency mean (sd)` = paste0(mean_value, " (", sd_value , ")"))%>%
  select(-starts_with("q"))%>%
  select(-mean_value, -sd_value)%>%
  flextable() %>%
  autofit()

tab1

tab2=summary_results_diffprior %>% 
  mutate(value = exp(value)) %>%
  group_by(method) %>% 
  summarise(ptc_value = quantile(value, c(0.05, 0.5, 0.95)), q = c(0.05, 0.5, 0.95),
            mean_value = mean(value),
            sd_value = std(value)) %>%
  ungroup() %>%
  mutate(across(c('ptc_value', 'mean_value','sd_value'), round, 2))%>%
  pivot_wider(names_from = "q", values_from = ptc_value, names_prefix = "q")%>%
  mutate(`Efficiency median (5th-95th)` = paste0(q0.5, " (", q0.05, " - ", q0.95, ")"))%>%
  mutate(`Efficiency mean (sd)` = paste0(mean_value, " (", sd_value , ")"))%>%
  select(-starts_with("q"))%>%
  select(-mean_value, -sd_value)%>%
  flextable() %>%
  autofit()

tab2
```

### Table

```{r single-form-table}
data_ma=hplcparam_candidates_df%>%filter(xpH==0)%>%
  mutate(line=1:n())

combined_results = list(
prior_ref = fws_prior_ref$chosen_indices,
noprior_ref = fws_noprior_ref$chosen_indices,
prior_2 = fws_prior_2$chosen_indices,
noprior_2 = 10000+fws_prior_2$chosen_indices, # dummy
prior_3 = fws_prior_3$chosen_indices,
noprior_3 = fws_noprior_3$chosen_indices,
prior_4 = fws_prior_4$chosen_indices,
noprior_4 = fws_noprior_4$chosen_indices,
prior_5 = fws_prior_5$chosen_indices,
noprior_5 = fws_noprior_5$chosen_indices)

selected_exp = enframe(combined_results)%>%
   unnest(value) %>%
  rename(line=value, Name = name) %>%
  left_join(data_ma, by = "line")%>%
   arrange(Name,tg, fio)%>%
  mutate(Modifier = if_else(m==0, "MeOH", "ACN")) %>%
  select(-c(line,xpH,m,td,to,te,fif)) %>%
  mutate(type = if_else(str_detect(Name, 'noprior'), "No prior", "Prior"))%>%
  mutate(across(where(is.numeric), ~replace_na(., -1)))

tab1<-selected_exp %>%
  filter(type == "Prior") %>%
  select(-type)%>%
  as_grouped_data(groups = "Name") %>%
  flextable() 
  
tab2<-selected_exp %>%
  filter(type == "No prior")%>%
    select(-type)%>%
  as_grouped_data(groups = "Name") %>%
  flextable() 

tab2 <- set_formatter(
  tab2, 
  tg = function(x) ifelse(x==-1," ", sprintf("%d", x) ),
  fio = function(x) ifelse(x==-1," ", sprintf("%.2f", x) )
  )

p1 = gen_grob(tab1, fit = "auto", just = "centre")
p2 = gen_grob(tab2, fit = "auto", just = "centre") 

gg<-ggplot()+
       theme(
         panel.background = element_rect(fill='transparent'),
         plot.background = element_rect(fill='transparent', color=NA),
         panel.grid.major = element_blank(),
         panel.grid.minor = element_blank(),
         legend.background = element_rect(fill='transparent'),
         legend.box.background = element_rect(fill='transparent')
       )

plot1 <- gg+p1+p2+ plot_layout(ncol = 3, widths = c(1, 20,20))

my.ggsave(.plot=plot1, .filename=paste("single-form-analytes-table.pdf"), .path = tables_dir1)
my.ggsave.png(.plot=plot1, .filename=paste("single-form-analytes-table.png"), .path = tables_dir1)

tab1
tab2
```

## Stan simulations
```{r single-form-analytes-laplace, eval=F}
chosen_indices = fws_prior_ref$chosen_indices # ref
prior_ma_ref = fun_predict_stan_results(mod_analytes_sim, datastruct_prior_ma, inits, chosen_indices, 10) 

chosen_indices = fws_noprior_ref$chosen_indices # ref
noprior_ma_ref = fun_predict_stan_results(mod_analytes_sim, datastruct_noprior_ma, inits, chosen_indices, 10) 

chosen_indices = fws_prior_2$chosen_indices # p=2
prior_ma_2 = fun_predict_stan_results(mod_analytes_sim, datastruct_prior_ma, inits, chosen_indices, 10) 

chosen_indices = fws_prior_3$chosen_indices # p=3
prior_ma_3 = fun_predict_stan_results(mod_analytes_sim, datastruct_prior_ma, inits, chosen_indices, 10) 

chosen_indices = fws_noprior_3$chosen_indices # p=3
noprior_ma_3 = fun_predict_stan_results(mod_analytes_sim, datastruct_noprior_ma, inits, chosen_indices, 10) 

chosen_indices = fws_prior_4$chosen_indices # p=4
prior_ma_4 = fun_predict_stan_results(mod_analytes_sim, datastruct_prior_ma, inits, chosen_indices, 10) 

chosen_indices = fws_noprior_4$chosen_indices # p=4
noprior_ma_4 = fun_predict_stan_results(mod_analytes_sim, datastruct_noprior_ma, inits, chosen_indices, 10) 

chosen_indices = fws_prior_5$chosen_indices # p=5
prior_ma_5 = fun_predict_stan_results(mod_analytes_sim, datastruct_prior_ma, inits, chosen_indices, 10) 

chosen_indices = fws_noprior_5$chosen_indices # p=5
noprior_ma_5 = fun_predict_stan_results(mod_analytes_sim, datastruct_noprior_ma, inits, chosen_indices, 10) 
```

#### Gradient conditions
```{r single-form-analytes-gra-summary}
chosen_indices = fws_prior_5$chosen_indices # p=5
p31=hplcparam_candidates_df %>%
  filter(xpH==0)%>%
  mutate(lines = row_number())%>%
  left_join(prior_ma_5$cresults%>%mutate(lines=as.integer(c))) %>%
  mutate(selected = factor(if_else(lines %in% chosen_indices,1,0))) %>%
  mutate(m_f = if_else(m==0, "MeOH", "ACN")) %>%
  ggplot(aes(x=tg, y=fio, z=qvar)) +
  geom_contour_filled()+
  geom_point(data = . %>% filter(selected==1))+
  facet_wrap(~m_f)
chosen_indices = fws_noprior_5$chosen_indices # p=5
p32=hplcparam_candidates_df %>%
  filter(xpH==0)%>%
  mutate(lines = row_number())%>%
  left_join(noprior_ma_5$cresults%>%mutate(lines=as.integer(c))) %>%
  mutate(selected = factor(if_else(lines %in% chosen_indices,1,0))) %>%
  mutate(m_f = if_else(m==0, "MeOH", "ACN")) %>%
  ggplot(aes(x=tg, y=fio, z=qvar)) +
  geom_contour_filled()+
  geom_point(data = . %>% filter(selected==1))+
  facet_wrap(~m_f)

iresults = rbind(prior_ma_ref$iresults%>%
                   mutate(method ="prior_ref"),
                 noprior_ma_ref$iresults%>%
                   mutate(method ="noprior_ref"),
                prior_ma_2$iresults%>%
                   mutate(method ="prior_2"),
                 prior_ma_3$iresults%>%
                   mutate(method ="prior_3"),
                 noprior_ma_3$iresults%>%
                   mutate(method ="noprior_3"),
                 prior_ma_4$iresults%>%
                   mutate(method ="prior_4"),
                 noprior_ma_4$iresults%>%
                   mutate(method ="noprior_4"),
                 prior_ma_5$iresults%>%
                   mutate(method ="prior_5"),
                 noprior_ma_5$iresults%>%
                   mutate(method ="noprior_5"))%>%
  mutate(ivar = if_else(ivar>1e6,1e6,ivar)) %>%
  left_join(tibble(i=as.factor(seq(1,nAnalytes*n_rep,1)),logP=logP, Type=NAB))


p33_1=iresults %>%
  ggplot(aes(y=method,x=ivar))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=ivar, color=logP),size=0.5, alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="max(Var)", y = "Method")+
  geom_vline(xintercept = 1, linetype="dotted")+
  coord_cartesian(xlim=c(0.1,100))+   
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))
p33_2=iresults %>%
  ggplot(aes(y=method,x=ivar))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=ivar, color=logP),size=0.5, alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="max(Var)", y = "Method")+
  geom_vline(xintercept = 1, linetype="dotted")+
  coord_cartesian(xlim=c(100,1000000))+    
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33=p33_1+p33_2+
  plot_layout(widths = c(3, 1),axes = "collect")


idx_exemple_analytes = iresults %>%
  filter(method=="prior_ref") %>%
  arrange(ivar)%>%
  slice(which(row_number() %% 100 == 1)) %>%
  select(i)%>%pull()

iresults %>%
  group_by(method) %>%
  summarise(`<=1x` = mean(ivar<=1),
  `<=2x` = mean(ivar<=2),
  `<=3x` = mean(ivar<=3)) %>%
  flextable() 

f55_1=iresults %>%
  group_by(method) %>%
  summarise(`<=1x` = mean(ivar<=1),
  `<=2x` = mean(ivar<=2),
  `<=3x` = mean(ivar<=3)) %>%
  pivot_longer(`<=1x`:`<=3x`, names_to = "target") %>%
  ggplot(aes(y=method,x=value,color=as.factor(target)))+
  geom_point()+
  labs(x="Probability", y = "Method", color = "target")+
  geom_vline(xintercept = 0.9, linetype="dotted")

my.ggsave(.plot=f55_1, .filename=paste("single-form-analytes-gra-prob.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=f55_1, .filename=paste("single-form-analytes-gra-prob.png"), .path = figures_dir1)
my.ggsave(.plot=p31, .filename=paste("single-form-analytes-gra-prior-p5.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=p31, .filename=paste("single-form-analytes-gra-prior-p5.png"), .path = figures_dir1)
my.ggsave(.plot=p32, .filename=paste("single-form-analytes-gra-noprior-p5.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=p32, .filename=paste("single-form-analytes-gra-noprior-p5.png"), .path = figures_dir1)
my.ggsave(.plot=p33+plot_layout(guides = "collect"), .filename=paste("single-form-analytes-gra-maxvar.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=p33+plot_layout(guides = "collect"), .filename=paste("single-form-analytes-gra-maxvar.png"), .path = figures_dir1)

p31
p32
p33
f33_1=p33
f55_1
```

#### Isocratic conditions
##### Individual plots
```{r single-form-analytes-izo-summary}
fi_temp = tibble(c=1:11, fi=seq(0,1,by=0.1))

plot_id = function(results) { 
  results %>%
  ggplot(aes(x=fi, y=CV/10)) +
  geom_line()+
  geom_ribbon(aes(x=fi, ymin = llog10tr, ymax = ulog10tr), alpha = 0.4, col = NA) +
  geom_line(aes(x=fi, y=mlog10tr), col = "black", size=0.25) +
     scale_y_continuous(
    name = "log(tr)",
    sec.axis = sec_axis(~.*10, name="%CV")) +
  scale_x_continuous(breaks = seq(0,1,by=0.2))+
  facet_grid(i~mod) +
  geom_hline(yintercept = 1, linetype=2)+
  coord_cartesian(ylim=c(0,4))
}


results_prior_ma_ref<-prior_ma_ref$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_noprior_ma_ref<-noprior_ma_ref$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_2<-prior_ma_2$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_3<-prior_ma_3$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = mrgmisc::ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_noprior_ma_3<-noprior_ma_3$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_4<-prior_ma_4$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_noprior_ma_4<-noprior_ma_4$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_5<-prior_ma_5$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_noprior_ma_5<-noprior_ma_5$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

plots_results_prior_ma_ref = map(results_prior_ma_ref,plot_id) 
plots_results_noprior_ma_ref = map(results_noprior_ma_ref,plot_id) 
plots_results_prior_ma_2 = map(results_prior_ma_2,plot_id) 
plots_results_prior_ma_3 = map(results_prior_ma_3,plot_id) 
plots_results_noprior_ma_3 = map(results_noprior_ma_3,plot_id) 
plots_results_prior_ma_4 = map(results_prior_ma_4,plot_id) 
plots_results_noprior_ma_4 = map(results_noprior_ma_4,plot_id) 
plots_results_prior_ma_5 = map(results_prior_ma_5,plot_id) 
plots_results_noprior_ma_5 = map(results_noprior_ma_5,plot_id) 

my.ggsave(.plot=plots_results_prior_ma_ref[[1]], .filename=paste("plots-results-prior-ma-ref.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=plots_results_prior_ma_ref[[1]], .filename=paste("plots-results-prior-ma-ref.png"), .path = figures_dir1)
my.ggsave(.plot=plots_results_prior_ma_5[[1]], .filename=paste("plots-results-prior-ma-5.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=plots_results_prior_ma_5[[1]], .filename=paste("plots-results-prior-ma-5.png"), .path = figures_dir1)

plots_results_prior_ma_ref 
plots_results_noprior_ma_ref 
plots_results_prior_ma_2
plots_results_prior_ma_3
plots_results_noprior_ma_3 
plots_results_prior_ma_4 
plots_results_noprior_ma_4 
plots_results_prior_ma_5  
plots_results_noprior_ma_5 

# map(show, function(i) plots_results_prior_ma_ref[[i]])
# map(show, function(i) plots_results_noprior_ma_ref[[i]])
# map(show, function(i) plots_results_prior_ma_4[[i]])
# map(show, function(i) plots_results_noprior_ma_4[[i]])
# map(show, function(i) plots_results_prior_ma_5[[i]])
# map(show, function(i) plots_results_noprior_ma_5[[i]])
```

##### Combined
```{r single-form-analytes-izo-summary-combined}
fi_temp = tibble(c=1:11, fi=seq(0,1,by=0.1))

plot_id = function(results) { 
  results %>%
  ggplot(aes(x=fi, y=CV)) +
  geom_line()+
  geom_ribbon(aes(x=fi, ymin = llog10tr, ymax = ulog10tr), alpha = 0.4, col = NA) +
  geom_line(aes(x=fi, y=mlog10tr), col = "black", size=0.25) +
     scale_y_continuous(
    name = "log(tr)",
    sec.axis = sec_axis(~.*1, name="%CV")) +
  scale_x_continuous(breaks = seq(0,1,by=0.2))+
  facet_grid(i~mod) +
  geom_hline(yintercept = 1, linetype=2)+
  coord_cartesian(ylim=c(0,4))
}

izoresults = rbind( prior_ma_ref$izoresults%>%
                   mutate(method ="prior_ref"),
                 noprior_ma_ref$izoresults%>%
                   mutate(method ="noprior_ref"),
                prior_ma_2$izoresults%>%
                   mutate(method ="prior_2"),
                 prior_ma_3$izoresults%>%
                   mutate(method ="prior_3"),
                 noprior_ma_3$izoresults%>%
                   mutate(method ="noprior_3"),
                 prior_ma_4$izoresults%>%
                   mutate(method ="prior_4"),
                 noprior_ma_4$izoresults%>%
                   mutate(method ="noprior_4"),
                 prior_ma_5$izoresults%>%
                   mutate(method ="prior_5"),
                 noprior_ma_5$izoresults%>%
                   mutate(method ="noprior_5")) %>%
  filter(mlog10tr<=log10(100))%>%
  filter(mlog10tr>=log10(5))%>%
  mutate(c = as.numeric(c),
         i=as.integer(i)) %>%
  arrange(i,method,c)%>%
  group_by(i,method) %>%
  summarise(imaxcv = max(CV), imincv = min(CV), aveCV = pracma::trapz(c, CV)/(n()-1)) %>%
  mutate(imaxcv = if_else(imaxcv>1e4,1e4,imaxcv))%>%
  left_join(tibble(i=as.integer(seq(1,nAnalytes*n_rep,1)),logP=logP, Type=NAB)) 
 
p33_1=izoresults %>%
  ggplot(aes(y=method,x=imaxcv))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=imaxcv, color=logP),size=0.5, alpha=0.1)+
  geom_boxplot(aes(y=method,x=imincv),outlier.size = 0, color="lightblue", alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="min(CV), max(CV)", y = "Method")+
  
  coord_cartesian(xlim=c(1,100))+   
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33_2=izoresults %>%
  ggplot(aes(y=method,x=imaxcv))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=imaxcv, color=logP),size=0.5, alpha=0.1)+
  geom_boxplot(aes(y=method,x=imincv),outlier.size = 0, color="lightblue", alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="min(CV), max(CV)", y = "Method")+
   
  coord_cartesian(xlim=c(100,10000))+    
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33=p33_1+p33_2+
  plot_layout(widths = c(3, 1),axes = "collect")

my.ggsave(.plot=p33+plot_layout(guides = "collect"), .filename=paste("N-izo-combined-CV.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=p33+plot_layout(guides = "collect"), .filename=paste("N-izo-combined-CV.png"), .path = figures_dir1)

p33
f44_1 = p33
```
# Stan multiple analytes. Monoprotic analytes. fi, tg and pH for MeOH and ACN as design variables

## Compile stan models
```{r monoprotic-analytes-compilation}
mod_mono_analytes_gq = cmdstan_model("../stan/hplc-gra-monoprotic-analytes-gq.stan", 
                                      stanc_options = list("O1"))
mod_mono_analytes_sim = cmdstan_model("../stan/hplc-gra-monoprotic-analytes-sim.stan", 
                                        stanc_options = list("O1"))
mod_mono_analytes = cmdstan_model("../stan/hplc-gra-monoprotic-analytes.stan", 
                                   stanc_options = list("O1"))
mod_mono_analytes$compile(compile_model_methods=TRUE,force_recompile=TRUE)
```

## Simulate retention times and create data sets
```{r monoprotic-analytes-simulations}
data_ma_pH=hplcparam_candidates_df
nObs = nrow(data_ma_pH);
nAnalytes =50;
cseed = 1234;
n_param = 6;
n_rep = 10;

datastruct_noprior_ma_pH=list()
datastruct_prior_ma_pH=list()
inits_pH = list()

for (i in 1:n_rep) {
datastruct_prior_ma_pH[[i]] = list(nObs=nObs,
                   nAnalytes=nAnalytes,
                   steps= 4+6*data_ma_pH$m,
                   hplcparam= as.matrix(data_ma_pH%>%dplyr::select(c(tg,td,to,te,fio,fif,m,xpH))),
                   include_prior= 1,
                   run_estimation=1,
                   nSel= nObs,
                   selected = 1:nObs)

fit_gq_pH  = mod_mono_analytes_gq$sample(data = datastruct_prior_ma_pH[[i]],
                                         seed = cseed,
                                         fixed_param = TRUE,
                                         chains = 1,
                                         iter_sampling=1)

datastruct_prior_ma_pH[[i]]$trobs = matrix(fit_gq_pH$draws(format = "matrix", 
                                                           variable = "y_hat_sim"),nAnalytes,nObs)
datastruct_prior_ma_pH[[i]]$logPobs = fit_gq_pH$draws(format = "matrix", 
                                                      variable = "logPobs")[1:nAnalytes]
datastruct_prior_ma_pH[[i]]$A1B2 = fit_gq_pH$draws(format = "matrix", 
                                                   variable = "A1B2")[1:nAnalytes]
param = matrix(fit_gq_pH$draws(format = "matrix", 
                               variable = "paramsim"),nAnalytes,6)


datastruct_noprior_ma_pH[[i]]=datastruct_prior_ma_pH[[i]];
datastruct_noprior_ma_pH[[i]]$include_prior = 0.01;

inits_pH[[i]]=param

cseed = cseed+1
}

mean_log_det_stan_pH = function(data_pH, init_pH, chosen_indices, S){

init_ma_pH = function(){list(param=init_pH)}
  
data_pH$selected = chosen_indices;
data_pH$nSel = length(chosen_indices);

 fit_opt  = mod_mono_analytes$optimize(
   data = data_pH,
   output_dir = here::here("stanfiles"),
   output_basename = S, #paste(chosen_indices, collapse = ""),
   seed = cseed,
   init = init_ma_pH,
   jacobian = TRUE,
   show_messages = F)
 
 mode=fit_opt$unconstrain_variables(list(param = fit_opt$mle("param")))
 hessian = fit_opt$hessian(unconstrained_variables = mode)$hessian

logdet = unlist(purrr::map(1:data_pH$nAnalytes,\(i) log(det(-hessian[((i-1)*6+1):((i-1)*6+6),((i-1)*6+1):((i-1)*6+6)]))))

return(logdet)
}

logP = unlist(purrr::map(1:length(datastruct_prior_ma_pH),\(i) datastruct_prior_ma_pH[[i]]$logPobs))
AB = unlist(purrr::map(1:length(datastruct_prior_ma_pH),\(i) datastruct_prior_ma_pH[[i]]$A1B2))

chosen_indices = c(430,421,420,418,157,427)
# quick test:
z_prior = parallel::mclapply(1:n_rep,\(i) mean_log_det_stan_pH(datastruct_prior_ma_pH[[i]], inits_pH[[i]], chosen_indices, i))
z_noprior = parallel::mclapply(1:n_rep,\(i) mean_log_det_stan_pH(datastruct_noprior_ma_pH[[i]], inits_pH[[i]], chosen_indices, i))
test = c(mean(unlist(z_prior)),mean(unlist(z_noprior)))
test
```

## Optimize 
```{r monoprotic-analytes-optimize, eval = F}
chosen_indices = c(418,157,423)
fw_prior_3 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(420,418,157,423)
fw_prior_4 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(174,420,418,417,423)
fw_prior_5 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(174,417,420,418,157,423)
fw_prior_6 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(158,417,420,418,141,423)
fw_noprior_6 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(429,174,417,420,418,141,423)
fw_prior_7 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(429,158,417,420,418,141,423)
fw_noprior_7 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(430,429,158,417,420,418,141,423)
fw_prior_8 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(430,429,142,417,420,418,141,423)
fw_noprior_8 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(419,430,429,158,417,420,418,157,431)
fw_prior_9 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(419,430,429,158,417,420,418,157,431)
fw_noprior_9 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(424,419,430,429,158,417,420,418,157,431)
fw_prior_10 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
chosen_indices = c(424,419,430,429,158,417,420,418,157,431)
fw_noprior_10 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices, n_iter = 100)
```

## Optimize tg constrain
```{r monoprotic-analytes-optimize-tgconstrain, eval=F}
chosen_indices = c(141,158,125,126,417,418,423,420)
fwtgc_prior_8 = fedorov_wynn_stan_par_tgconstraint(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, tg_constraint = 1440, n_iter = 100)
chosen_indices = c(141,158,125,126,417,418,423,420)
fwtgc_noprior_8 = fedorov_wynn_stan_par_tgconstraint(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices, tg_constraint = 1440,n_iter = 100)
```

### Read the results and compare
```{r monoprotic-analytes-logDet-summary}

chosen_indices_prior   = c(418,417,423) # p=3
fw_prior_3 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)

chosen_indices_prior   = c(420,418,417,423) # p=4
fw_prior_4 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)

chosen_indices_prior   = c(174,420,418,417,423) # p=5
fw_prior_5 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)
  
chosen_indices_prior = c(129,130,131,132,417,418,419,420)
chosen_indices_noprior= c(129,130,131,132,417,418,419,420)
fw_prior_ref = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)
fw_noprior_ref = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(174,417,420,418,157,423) # p=6
chosen_indices_noprior = c(158,417,420,418,141,423) # p=6
fw_prior_6 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)
fw_noprior_6 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(429,174,417,420,418,141,423) # p=7 
chosen_indices_noprior = c(429,158,417,420,418,141,423) # p=7
fw_prior_7 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)
fw_noprior_7 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(430,429,158,417,420,418,141,423) # p=8 
chosen_indices_noprior = c(430,429,142,417,420,418,141,423) # p=8
fw_prior_8 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)
fw_noprior_8 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(419,430,429,158,417,420,418,157,431) # p=9 
chosen_indices_noprior   = c(419,430,429,158,417,420,418,141,431) # p=9 
fw_prior_9 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)
fw_noprior_9 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices_noprior, n_iter = 0)

chosen_indices = c(424,419,430,429,158,417,420,418,157,431)
fw_prior_10 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices, n_iter = 0)
chosen_indices = c(424,419,430,429,158,417,420,418,141,431)
fw_noprior_10 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices, n_iter = 0)

chosen_indices_prior   = c(141,158,125,126,417,418,423,420) # p=8 
chosen_indices_noprior = c(141,158,125,126,417,418,423,420) # p=8
fwtgc_prior_8 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_prior_ma_pH, inits_pH, chosen_indices_prior, n_iter = 0)
fwtgc_noprior_8 = fedorov_wynn_stan_par(mean_log_det_stan_pH, datastruct_noprior_ma_pH, inits_pH, chosen_indices_noprior, n_iter = 0)

summary_results = tibble(logP = logP,
                         Type = AB,
                         prior_ref = fw_prior_ref$log_det_FIM,
                        noprior_ref = fw_noprior_ref$log_det_FIM,
                         prior_03 = fw_prior_3$log_det_FIM,
                         prior_04 = fw_prior_4$log_det_FIM,
                         prior_05 = fw_prior_5$log_det_FIM,
                          prior_06 = fw_prior_6$log_det_FIM,
                          noprior_06 = fw_noprior_6$log_det_FIM,
                          prior_07 = fw_prior_7$log_det_FIM,
                          noprior_07 = fw_noprior_7$log_det_FIM,
                          prior_08 = fw_prior_8$log_det_FIM,
                          noprior_08 = fw_noprior_8$log_det_FIM,
                          prior_09 = fw_prior_9$log_det_FIM,
                          noprior_09 = fw_noprior_9$log_det_FIM,
                          prior_10 = fw_prior_10$log_det_FIM,
                          noprior_10 = fw_noprior_10$log_det_FIM) %>%
  pivot_longer(prior_ref:noprior_10, names_to = "method")

p1=ggplot(summary_results, aes(y=method,x=value))+
  geom_boxplot(outlier.size = 0.5)+
 geom_jitter(aes(y=method, x=value, color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="log(|FIM|)", y = "Method")

summary_results_diff = tibble(logP = logP,
                         Type = AB,
                         fw_prior_ref = fw_prior_ref$log_det_FIM,
                          fw_noprior_ref = fw_noprior_ref$log_det_FIM,
                         fw_prior_3 = fw_prior_3$log_det_FIM,
                         fw_prior_4 = fw_prior_4$log_det_FIM,
                         fw_prior_5 = fw_prior_5$log_det_FIM,
                          fw_prior_6 = fw_prior_6$log_det_FIM,
                          fw_noprior_6 = fw_noprior_6$log_det_FIM,
                          fw_prior_7 = fw_prior_7$log_det_FIM,
                          fw_noprior_7 = fw_noprior_7$log_det_FIM,
                          fw_prior_8 = fw_prior_8$log_det_FIM,
                          fw_noprior_8 = fw_noprior_8$log_det_FIM,
                          fw_prior_9 = fw_prior_9$log_det_FIM,
                          fw_noprior_9 = fw_noprior_9$log_det_FIM,
                          fw_prior_10 = fw_prior_10$log_det_FIM,
                          fw_noprior_10 = fw_noprior_10$log_det_FIM) %>%
  mutate(d_prior_03 = (fw_prior_3 - fw_prior_ref)/n_param,
         d_prior_04 = (fw_prior_4 - fw_prior_ref)/n_param,
         d_prior_05 = (fw_prior_5 - fw_prior_ref)/n_param,
         d_prior_06 = (fw_prior_6 - fw_prior_ref)/n_param,
         d_noprior_06 = (fw_noprior_6 - fw_noprior_ref)/n_param,
         d_prior_07 = (fw_prior_7 - fw_prior_ref)/n_param,
         d_noprior_07 = (fw_noprior_7 - fw_noprior_ref)/n_param,
         d_prior_08 = (fw_prior_8 - fw_prior_ref)/n_param,
         d_noprior_08 = (fw_noprior_8 - fw_noprior_ref)/n_param,
         d_prior_09 = (fw_prior_9 - fw_prior_ref)/n_param,
         d_noprior_09 = (fw_noprior_9 - fw_noprior_ref)/n_param,
         d_prior_10 = (fw_prior_10 - fw_prior_ref)/n_param,
         d_noprior_10 = (fw_noprior_10 - fw_noprior_ref)/n_param)%>%
  pivot_longer(d_prior_03:d_noprior_10, names_to = "method")

p2=ggplot(summary_results_diff, aes(y=method,x=exp(value)))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=exp(value), color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="Efficiency relative to the reference design", y = "Method")+
  geom_vline(xintercept = 1, linetype = "dotted")

summary_results_diffprior = tibble(logP = logP,
                         Type = AB,
                         fw_prior_ref = fw_prior_ref$log_det_FIM,
                          fw_noprior_ref = fw_noprior_ref$log_det_FIM,
                         fw_prior_3 = fw_prior_3$log_det_FIM,
                         fw_prior_4 = fw_prior_4$log_det_FIM,
                         fw_prior_5 = fw_prior_5$log_det_FIM,
                          fw_prior_6 = fw_prior_6$log_det_FIM,
                          fw_noprior_6 = fw_noprior_6$log_det_FIM,
                          fw_prior_7 = fw_prior_7$log_det_FIM,
                          fw_noprior_7 = fw_noprior_7$log_det_FIM,
                          fw_prior_8 = fw_prior_8$log_det_FIM,
                          fw_noprior_8 = fw_noprior_8$log_det_FIM,
                          fw_prior_9 = fw_prior_9$log_det_FIM,
                          fw_noprior_9 = fw_noprior_9$log_det_FIM,
                          fw_prior_10 = fw_prior_10$log_det_FIM,
                          fw_noprior_10 = fw_noprior_10$log_det_FIM) %>%
  mutate(d_ref  = (fw_prior_ref-fw_noprior_ref)/n_param,
         d_06 = (fw_prior_6-fw_noprior_6)/n_param,
         d_07 = (fw_prior_7-fw_noprior_7)/n_param,
         d_08 = (fw_prior_8-fw_noprior_8)/n_param,
         d_09 = (fw_prior_9-fw_noprior_9)/n_param,
         d_10 = (fw_prior_10-fw_noprior_10)/n_param)%>%
  pivot_longer(d_ref:d_10, names_to = "method")

p3=ggplot(summary_results_diffprior, aes(y=method,x=exp(value)))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=exp(value), color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="Effect of prior on design efficiency", y = "Method")+
  geom_vline(xintercept = 1, linetype = "dotted")+
  scale_x_continuous(limits = c(0.5,100),
                     trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.01, 100)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))



my.ggsave(.plot=p1, .filename=paste("monoprotic-analytes-logdFIM-abs.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=p1, .filename=paste("monoprotic-analytes-logdFIM-abs.png"), .path = figures_dir2)
my.ggsave(.plot=p2, .filename=paste("monoprotic-analytes-logdFIM-rel.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=p2, .filename=paste("monoprotic-analytes-logdFIM-rel.png"), .path = figures_dir2)
my.ggsave(.plot=p3, .filename=paste("monoprotic-analytes-logdFIM-prioreff.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=p3, .filename=paste("monoprotic-analytes-logdFIM-prioreff.png"), .path = figures_dir2)

p1
p2
p3
f2_2 = p2
f3_2 = p3
```
#### Table Summary
```{r table-monoprotic}
tab1=summary_results_diff %>% 
  mutate(value = exp(value)) %>%
  group_by(method) %>% 
  summarise(ptc_value = quantile(value, c(0.05, 0.5, 0.95)), q = c(0.05, 0.5, 0.95),
            mean_value = mean(value),
            sd_value = std(value)) %>%
  ungroup() %>%
  mutate(across(c('ptc_value', 'mean_value','sd_value'), round, 2))%>%
  pivot_wider(names_from = "q", values_from = ptc_value, names_prefix = "q")%>%
  mutate(`Efficiency median (5th-95th)` = paste0(q0.5, " (", q0.05, " - ", q0.95, ")"))%>%
  mutate(`Efficiency mean (sd)` = paste0(mean_value, " (", sd_value , ")"))%>%
  select(-starts_with("q"))%>%
  select(-mean_value, -sd_value)%>%
  flextable() %>%
  autofit()

tab1
```

### Table

```{r monoprotic-analytes-table}
data_ma_pH=hplcparam_candidates_df%>%
  mutate(line=1:n())

combined_results = list(
prior_ref = fw_prior_ref$chosen_indices,
noprior_ref = fw_noprior_ref$chosen_indices,
prior_3 = fw_prior_3$chosen_indices,
prior_4 = fw_prior_4$chosen_indices,
prior_5 = fw_prior_5$chosen_indices,
noprior_3 = 10000+fw_prior_3$chosen_indices,
noprior_4 = 10000+fw_prior_4$chosen_indices,
noprior_5 = 10000+fw_prior_5$chosen_indices,
prior_6 = fw_prior_6$chosen_indices,
noprior_6 = fw_noprior_6$chosen_indices,
prior_7 = fw_prior_7$chosen_indices,
noprior_7 = fw_noprior_7$chosen_indices,
prior_8 = fw_prior_8$chosen_indices,
noprior_8 = fw_noprior_8$chosen_indices,
prior_9 = fw_prior_9$chosen_indices,
noprior_9 = fw_noprior_9$chosen_indices,
prior_10 = fw_prior_10$chosen_indices,
noprior_10 = fw_noprior_10$chosen_indices)

selected_exp = enframe(combined_results)%>%
   unnest(value) %>%
  rename(line=value, Name = name) %>%
  left_join(data_ma_pH, by = "line")%>%
   arrange(Name,xpH,tg, fio)%>%
  mutate(Modifier = if_else(m==0, "MeOH", "ACN")) %>%
  mutate(xpH = if_else(xpH==0, "N", "I")) %>%
  select(-c(line,m,td,to,te,fif)) %>%
  mutate(type = if_else(str_detect(Name, 'noprior'), "No prior", "Prior"))%>%
  mutate(across(where(is.numeric), ~replace_na(., -1)))

tab1<-selected_exp %>%
  filter(type == "Prior") %>%
  select(-type)%>%
  as_grouped_data(groups = "Name") %>%
  flextable() 
  
tab2<-selected_exp %>%
  filter(type == "No prior")%>%
    select(-type)%>%
  as_grouped_data(groups = "Name") %>%
  flextable() 

tab2 <- set_formatter(
  tab2, 
  tg = function(x) ifelse(x==-1," ", sprintf("%d", x) ),
  fio = function(x) ifelse(x==-1," ", sprintf("%.2f", x) )
  )

p1 = gen_grob(tab1, fit = "auto", just = "centre")
p2 = gen_grob(tab2, fit = "auto", just = "centre") 

gg<-ggplot()+
       theme(
         panel.background = element_rect(fill='transparent'),
         plot.background = element_rect(fill='transparent', color=NA),
         panel.grid.major = element_blank(),
         panel.grid.minor = element_blank(),
         legend.background = element_rect(fill='transparent'),
         legend.box.background = element_rect(fill='transparent')
       )

plot1 <- gg+p1+p2+ plot_layout(ncol = 3, widths = c(1, 20,20))

my.ggsave(.plot=plot1, .filename=paste("monoprotic-table.pdf"), .path = tables_dir2)
my.ggsave.png(.plot=plot1, .filename=paste("monoprotic-table.png"), .path = tables_dir2)

tab1
tab2
```

## Stan simulations
```{r monoprotic-analytes-laplace, eval = F}

chosen_indices=fw_prior_ref$chosen_indices
prior_ma_pH_ref = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 


chosen_indices=fw_noprior_ref$chosen_indices
noprior_ma_pH_ref = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_noprior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_prior_3$chosen_indices # p=3
prior_ma_pH_3 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_prior_4$chosen_indices # p=4
prior_ma_pH_4 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_prior_5$chosen_indices # p=5
prior_ma_pH_5 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_prior_6$chosen_indices # p=6
prior_ma_pH_6 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_noprior_6$chosen_indices  # p=6
noprior_ma_pH_6 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_noprior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_prior_7$chosen_indices  # p=7 
prior_ma_pH_7 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_noprior_7$chosen_indices # p=7
noprior_ma_pH_7 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_noprior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_prior_8$chosen_indices  # p=8
prior_ma_pH_8 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_noprior_8$chosen_indices  # p=8
noprior_ma_pH_8 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_noprior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_prior_9$chosen_indices  # p=9
prior_ma_pH_9 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_noprior_9$chosen_indices  # p=9
noprior_ma_pH_9 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_noprior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_prior_10$chosen_indices  # p=9
prior_ma_pH_10 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_prior_ma_pH, inits_pH, chosen_indices, 10) 

chosen_indices=fw_noprior_10$chosen_indices  # p=9
noprior_ma_pH_10 = fun_predict_stan_results_pH(mod_mono_analytes_sim, datastruct_noprior_ma_pH, inits_pH, chosen_indices, 10) 

```

#### Gradient conditions
```{r monoprotic-analytes-gra-summary-v2}
chosen_indices_prior   = fw_prior_10$chosen_indices# p=10
chosen_indices_noprior = fw_noprior_10$chosen_indices # p=10

p31=hplcparam_candidates_df %>%
  mutate(lines = row_number())%>%
  left_join(prior_ma_pH_10$cresults%>%mutate(lines=as.integer(c))) %>%
  mutate(selected = factor(if_else(lines %in% chosen_indices_prior,1,0))) %>%
  mutate(m_f = if_else(m==0, "MeOH", "ACN")) %>%
  mutate(pH_f = if_else(xpH==0,"N", "A or B"))%>%
  ggplot( aes(x=tg, y=fio, z=qvar)) +
  geom_contour_filled()+
  geom_point(data = . %>% filter(selected==1))+
  facet_wrap(pH_f~m_f)

p32=hplcparam_candidates_df %>%
  mutate(lines = row_number())%>%
  left_join(noprior_ma_pH_10$cresults%>%mutate(lines=as.integer(c))) %>%
  mutate(selected = factor(if_else(lines %in% chosen_indices_noprior,1,0))) %>%
  mutate(m_f = if_else(m==0, "MeOH", "ACN")) %>%
  mutate(pH_f = if_else(xpH==0,"N", "A or B"))%>%
  ggplot( aes(x=tg, y=fio, z=qvar)) +
  geom_contour_filled()+
  geom_point(data = . %>% filter(selected==1))+
  facet_wrap(pH_f~m_f)


iresults = rbind(prior_ma_pH_ref$iresults%>%
                   mutate(method ="prior_ref"),
                 noprior_ma_pH_ref$iresults%>%
                   mutate(method ="noprior_ref"),
                  prior_ma_pH_3$iresults%>%
                   mutate(method ="prior_03"),
                  prior_ma_pH_4$iresults%>%
                   mutate(method ="prior_04"),
                   prior_ma_pH_5$iresults%>%
                   mutate(method ="prior_05"),
                 prior_ma_pH_6$iresults%>%
                   mutate(method ="prior_06"),
                 noprior_ma_pH_6$iresults%>%
                   mutate(method ="noprior_06"),
                 prior_ma_pH_7$iresults%>%
                   mutate(method ="prior_07"),
                 noprior_ma_pH_7$iresults%>%
                   mutate(method ="noprior_07"),
                 prior_ma_pH_8$iresults%>%
                   mutate(method ="prior_08"),
                 noprior_ma_pH_8$iresults%>%
                   mutate(method ="noprior_08"),
                 prior_ma_pH_9$iresults%>%
                   mutate(method ="prior_09"),
                 noprior_ma_pH_9$iresults%>%
                   mutate(method ="noprior_09"),
                 prior_ma_pH_10$iresults%>%
                   mutate(method ="prior_10"),
                 noprior_ma_pH_10$iresults%>%
                   mutate(method ="noprior_10"))%>%
  mutate(ivar = if_else(ivar>1e6,1e6,ivar))%>%
  left_join(tibble(i=as.factor(seq(1,nAnalytes*n_rep,1)),logP=logP, Type=NAB))

p33_1=iresults %>%
ggplot(aes(y=method,x=ivar))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=ivar, color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="max(Var)", y = "Method")+
  geom_vline(xintercept = 1, linetype="dotted")+
  coord_cartesian(xlim=c(0.1,100))+   
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))
p33_2=iresults %>%
ggplot(aes(y=method,x=ivar))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=ivar, color=logP),size=0.5, alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="max(Var)", y = "Method")+
  geom_vline(xintercept = 1, linetype="dotted")+
  coord_cartesian(xlim=c(100,1000000))+    
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33=p33_1+p33_2+
  plot_layout(widths = c(3, 1),axes = "collect")

idx_exemple_analytes = iresults %>%
  filter(method=="prior_ref") %>%
  arrange(ivar)%>%
  slice(which(row_number() %% 100 == 1)) %>%
  select(i)%>%pull

iresults %>%
  group_by(method) %>%
  summarise(`<=1x` = mean(ivar<=1),
  `<=2x` = mean(ivar<=2),
  `<=3x` = mean(ivar<=3)) %>%
  flextable() 

f55_2=iresults %>%
  group_by(method) %>%
  summarise(`<=1x` = mean(ivar<=1),
  `<=2x` = mean(ivar<=2),
  `<=3x` = mean(ivar<=3)) %>%
  pivot_longer(`<=1x`:`<=3x`, names_to = "target") %>%
  ggplot(aes(y=method,x=value,color=as.factor(target)))+
  geom_point()+
  labs(x="Probability", y = "Method", color = "target")+
  geom_vline(xintercept = 0.9, linetype="dotted")

my.ggsave(.plot=f55_2, .filename=paste("monoprotic-analytes-gra-prob.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=f55_2, .filename=paste("monoprotic-analytes-gra-prob.png"), .path = figures_dir1)

my.ggsave(.plot=p31, .filename=paste("monoprotic-analytes-gra-prior-p10.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=p31, .filename=paste("monoprotic-analytes-gra-prior-p10.png"), .path = figures_dir2)
my.ggsave(.plot=p32, .filename=paste("monoprotic-analytes-gra-noprior-p10.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=p32, .filename=paste("monoprotic-analytes-gra-noprior-p10.png"), .path = figures_dir2)
my.ggsave(.plot=p33+plot_layout(guides = "collect"), .filename=paste("monoprotic-analytes-gra-maxvar.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=p33+plot_layout(guides = "collect"), .filename=paste("monoprotic-analytes-gra-maxvar.png"), .path = figures_dir2)

p31
p32
p33
f33_2=p33
f55_2
```

#### Izocratic conditions
```{r monoprotic-analytes-izo-summary-v2}
fi_temp = tibble(c=1:11, fi=seq(0,1,by=0.1))

plot_id = function(results) { 
  results %>%
  ggplot(aes(x=fi, y=CV/10)) +
  geom_line()+
  geom_ribbon(aes(x=fi, ymin = llog10tr, ymax = ulog10tr), alpha = 0.4, col = NA) +
  geom_line(aes(x=fi, y=mlog10tr), col = "black", size=0.25) +
     scale_y_continuous(
    name = "log(tr)",
    sec.axis = sec_axis(~.*10, name="%CV")) +
      scale_x_continuous(breaks = seq(0,1,by=0.2))+
  facet_grid(i~mod+form) +
  geom_hline(yintercept = 1, linetype=2)+
  coord_cartesian(ylim=c(0,4))
}

results_prior_ma_pH_ref<-prior_ma_pH_ref$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
  filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_noprior_ma_pH_ref<-noprior_ma_pH_ref$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
      filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_pH_3<-prior_ma_pH_3$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_prior_ma_pH_4<-prior_ma_pH_4$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_pH_5<-prior_ma_pH_5$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_pH_6<-prior_ma_pH_6$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_noprior_ma_pH_6<-noprior_ma_pH_6$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
      filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_pH_7<-prior_ma_pH_7$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_noprior_ma_pH_7<-noprior_ma_pH_7$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
      filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_pH_8<-prior_ma_pH_8$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_noprior_ma_pH_8<-noprior_ma_pH_8$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
      filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_pH_9<-prior_ma_pH_9$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_noprior_ma_pH_9<-noprior_ma_pH_9$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
      filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

results_prior_ma_pH_10<-prior_ma_pH_10$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])
results_noprior_ma_pH_10<-noprior_ma_pH_10$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
      filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>% 
  split(.[["PLOTS"]])

plots_results_prior_ma_pH_ref = map(results_prior_ma_pH_ref,plot_id) 
plots_results_noprior_ma_pH_ref = map(results_noprior_ma_pH_ref,plot_id) 

plots_results_prior_ma_pH_3 = map(results_prior_ma_pH_3,plot_id) 
plots_results_prior_ma_pH_4 = map(results_prior_ma_pH_4,plot_id) 
plots_results_prior_ma_pH_5 = map(results_prior_ma_pH_5,plot_id) 

plots_results_prior_ma_pH_6 = map(results_prior_ma_pH_6,plot_id) 
plots_results_noprior_ma_pH_6 = map(results_noprior_ma_pH_6,plot_id) 
plots_results_prior_ma_pH_7 = map(results_prior_ma_pH_7,plot_id) 
plots_results_noprior_ma_pH_7 = map(results_noprior_ma_pH_7,plot_id) 
plots_results_prior_ma_pH_8 = map(results_prior_ma_pH_8,plot_id) 
plots_results_noprior_ma_pH_8 = map(results_noprior_ma_pH_8,plot_id) 
plots_results_prior_ma_pH_9 = map(results_prior_ma_pH_9,plot_id) 
plots_results_noprior_ma_pH_9 = map(results_noprior_ma_pH_9,plot_id) 
plots_results_prior_ma_pH_10 = map(results_prior_ma_pH_10,plot_id) 
plots_results_noprior_ma_pH_10 = map(results_noprior_ma_pH_10,plot_id) 


my.ggsave(.plot=plots_results_prior_ma_pH_ref[[1]], .filename=paste("plots-results-prior-ma-pH-ref.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=plots_results_prior_ma_pH_ref[[1]], .filename=paste("plots-results-prior-ma-pH-ref.png"), .path = figures_dir2)
my.ggsave(.plot=plots_results_prior_ma_pH_10[[1]], .filename=paste("plots-results-prior-ma-pH-10.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=plots_results_prior_ma_pH_10[[1]], .filename=paste("plots-results-prior-ma-pH-10.png"), .path = figures_dir2)

plots_results_prior_ma_pH_ref
plots_results_noprior_ma_pH_ref

plots_results_prior_ma_pH_3
plots_results_prior_ma_pH_4
plots_results_prior_ma_pH_5

plots_results_prior_ma_pH_6
plots_results_noprior_ma_pH_6
plots_results_prior_ma_pH_7
plots_results_noprior_ma_pH_7
plots_results_prior_ma_pH_8
plots_results_noprior_ma_pH_8

plots_results_prior_ma_pH_9
plots_results_noprior_ma_pH_9

plots_results_prior_ma_pH_10
plots_results_noprior_ma_pH_10
# map(show, function(i) plots_results_prior_ma_pH_ref[[i]])

```

##### Combined
```{r single-form-analytes-izo-summary-pH-combined}
fi_temp = tibble(c=1:11, fi=seq(0,1,by=0.1))

izoresults = rbind(
                   prior_ma_pH_ref$izoresults%>%
                   mutate(method ="prior_ref"),
                 noprior_ma_pH_ref$izoresults%>%
                   mutate(method ="noprior_ref"),
                  prior_ma_pH_3$izoresults%>%
                   mutate(method ="prior_03"),
                  prior_ma_pH_4$izoresults%>%
                   mutate(method ="prior_04"),
                   prior_ma_pH_5$izoresults%>%
                   mutate(method ="prior_05"),
                 prior_ma_pH_6$izoresults%>%
                   mutate(method ="prior_06"),
                 noprior_ma_pH_6$izoresults%>%
                   mutate(method ="noprior_06"),
                 prior_ma_pH_7$izoresults%>%
                   mutate(method ="prior_07"),
                 noprior_ma_pH_7$izoresults%>%
                   mutate(method ="noprior_07"),
                 prior_ma_pH_8$izoresults%>%
                   mutate(method ="prior_08"),
                 noprior_ma_pH_8$izoresults%>%
                   mutate(method ="noprior_08"),
                 prior_ma_pH_9$izoresults%>%
                   mutate(method ="prior_09"),
                 noprior_ma_pH_9$izoresults%>%
                   mutate(method ="noprior_09"),
                 prior_ma_pH_10$izoresults%>%
                   mutate(method ="prior_10"),
                 noprior_ma_pH_10$izoresults%>%
                   mutate(method ="noprior_10")) %>%
  filter(mlog10tr<=log10(100))%>%
  filter(mlog10tr>=log10(5))%>%
  mutate(c = as.numeric(c),
         i=as.integer(i)) %>%
  arrange(i,method,c)%>%
  group_by(i,method) %>%
  summarise(imaxcv = max(CV), imincv = min(CV), aveCV = pracma::trapz(c, CV)/(n()-1)) %>%
  mutate(imaxcv = if_else(imaxcv>1e4,1e4,imaxcv))%>%
  left_join(tibble(i=as.integer(seq(1,nAnalytes*n_rep,1)),logP=logP, Type=NAB))
  
 
p33_1=izoresults %>%
  ggplot(aes(y=method,x=imaxcv))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=imaxcv, color=logP),size=0.5, alpha=0.1)+
  geom_boxplot(aes(y=method,x=imincv),outlier.size = 0, color="lightblue", alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="min(CV), max(CV)", y = "Method")+
  
  coord_cartesian(xlim=c(1,100))+   
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33_2=izoresults %>%
  ggplot(aes(y=method,x=imaxcv))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=imaxcv, color=logP),size=0.5, alpha=0.1)+
  geom_boxplot(aes(y=method,x=imincv),outlier.size = 0, color="lightblue", alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="min(CV), max(CV)", y = "Method")+
  coord_cartesian(xlim=c(100,10000))+    
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33=p33_1+p33_2+
  plot_layout(widths = c(3, 1),axes = "collect")

p33
f44_2 = p33
my.ggsave(.plot=p33+plot_layout(guides = "collect"), .filename=paste("NI-izo-combined-CV.pdf"), .path = figures_dir2)
my.ggsave.png(.plot=p33+plot_layout(guides = "collect"), .filename=paste("NI-izo-combined-CV.png"), .path = figures_dir2)
```

# Stan multiple analytes. Single form analytes. fi and tg for MeOH as design variables

## Compile stan models
```{r single-form-analytes-MeOH-compilation}
mod_analytes_MeOH_gq= cmdstan_model("../stan/hplc-gra-single-form-analytes-MeOH-gq.stan", 
                                    stanc_options = list("O1"))
mod_analytes_MeOH_sim = cmdstan_model("../stan/hplc-gra-single-form-analytes-MeOH-sim.stan",
                                      stanc_options = list("O1"))
mod_analytes_MeOH = cmdstan_model("../stan/hplc-gra-single-form-analytes-MeOH.stan", 
                                  stanc_options = list("O1"))
mod_analytes_MeOH$compile(compile_model_methods=TRUE,force_recompile=TRUE)
```

## Simulate retention times and create datasets

Probability of occurrence 0.4 neutral, 0.3 A, 0.3 B with $log P$ being sampled from 2.2 $\pm$ 2 and constrained between 0.5 and 7.
  
```{r single-form-analytes-MeOH-simulations}
data_ma_MeOH=hplcparam_candidates_df%>%filter(xpH==0, m==0)
nObs = nrow(data_ma_MeOH);
nAnalytes =50;
cseed = 1234;
n_param = 3;
n_rep = 10;

datastruct_noprior_ma_MeOH=list()
datastruct_prior_ma_MeOH=list()
inits_MeOH = list()

for (i in 1:n_rep) {
datastruct_prior_ma_MeOH[[i]] = list(nObs=nObs,
                   nAnalytes=nAnalytes,
                   steps = 4 + 6*data_ma_MeOH$m,
                   hplcparam=as.matrix(data_ma_MeOH%>%dplyr::select(c(tg,td,to,te,fio,fif,m))),
                   include_prior = 1,
                   run_estimation=1,
                   nSel = nObs,
                   selected = 1:nObs)

fit_MeOH_gq  = mod_analytes_MeOH_gq$sample(data = datastruct_prior_ma_MeOH[[i]],
                                         seed = cseed,
                                         fixed_param = TRUE,
                                         chains = 1,
                                         iter_sampling=1)

datastruct_prior_ma_MeOH[[i]]$trobs = matrix(fit_MeOH_gq$draws(format = "matrix", variable = "y_hat_sim"),nAnalytes,nObs)
datastruct_prior_ma_MeOH[[i]]$logPobs = fit_MeOH_gq$draws(format = "matrix", variable = "logPobs")[1:nAnalytes]
datastruct_prior_ma_MeOH[[i]]$N1A2B3 = fit_MeOH_gq$draws(format = "matrix", variable = "N1A2B3")[1:nAnalytes]
param = matrix(fit_MeOH_gq$draws(format = "matrix", variable = "paramsim"),nAnalytes,2)


datastruct_noprior_ma_MeOH[[i]]=datastruct_prior_ma_MeOH[[i]];
datastruct_noprior_ma_MeOH[[i]]$include_prior = 0.01;

inits_MeOH[[i]]=param

cseed = cseed+1
}

mean_log_det_stan_MeOH = function(data, init, chosen_indices, S){
  
init_ma = function(){list(param=init)}
  
data$selected = chosen_indices;
data$nSel = length(chosen_indices);

 fit_MeOH_opt  = mod_analytes_MeOH$optimize(
   data = data,
   output_dir = here::here("stanfiles"),
   output_basename = S,
   seed = cseed,
   init = init_ma,
   jacobian = TRUE,
   show_messages = F)
 
 mode=fit_MeOH_opt$unconstrain_variables(list(param = fit_MeOH_opt$mle("param")))
 hessian = fit_MeOH_opt$hessian(unconstrained_variables = mode)$hessian

logdet = unlist(purrr::map(1:data$nAnalytes,\(i) log(det(-hessian[((i-1)*2+1):((i-1)*2+2),((i-1)*2+1):((i-1)*2+2)]))))

return(logdet)
}

chosen_indices = c(33,105)

# quick test:
z_prior = parallel::mclapply(1:n_rep,\(i) mean_log_det_stan_MeOH(datastruct_prior_ma_MeOH[[i]], inits_MeOH[[i]], chosen_indices, i), mc.cores=10)
z_noprior = parallel::mclapply(1:n_rep,\(i) mean_log_det_stan_MeOH(datastruct_noprior_ma_MeOH[[i]], inits_MeOH[[i]], chosen_indices, i), mc.cores=10)
test = c(mean(unlist(z_prior)),mean(unlist(z_noprior)))
test
c("11.60490 10.92038")

logP = unlist(purrr::map(1:length(datastruct_prior_ma_MeOH),\(i) datastruct_prior_ma_MeOH[[i]]$logPobs))
NAB = unlist(purrr::map(1:length(datastruct_prior_ma_MeOH),\(i) datastruct_prior_ma_MeOH[[i]]$N1A2B3))
```

## Optimization
```{r single-form-analytes-MeOH-optimization, eval=FALSE}
chosen_indices = c(105) # initial values
fws_MeOH_prior_1 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, n_iter = 100)

chosen_indices = c(40,105) # initial values
fws_MeOH_prior_2 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, n_iter = 100)
chosen_indices = c(40,105) # initial values
fws_MeOH_noprior_2 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices, n_iter = 100)

chosen_indices = c(108,36,105) # initial values
fws_MeOH_prior_3 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, n_iter = 100)
chosen_indices = c(108,36,105) # initial values
fws_MeOH_noprior_3 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices, n_iter = 100)

chosen_indices = c(108,101,36,105) # initial values
fws_MeOH_prior_4 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, n_iter = 100)
chosen_indices = c(108,101,36,105) # initial values
fws_MeOH_noprior_4 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices, n_iter = 100)
```

## Optimization tg constrained
```{r single-form-analytes-optimization-MeOH-tgconstrain, eval=FALSE}
chosen_indices = c(32,105) # initial values
fwstgc_MeOH_prior_2 = fedorov_wynn_stan_par_tgconstraint(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, tg_constraint = 360, n_iter = 100)
chosen_indices = c(32,105) # initial values
fwstgc_MeOH_noprior_2 = fedorov_wynn_stan_par_tgconstraint(mean_log_det_stan_MeOH, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices, tg_constraint = 360, n_iter = 100)
```

### Read the results and compare
```{r single-form-analytes-MeOH-logDet-summary}
chosen_indices_prior = c(33,105) # ref
chosen_indices_noprior= c(33,105) # ref
fws_MeOH_prior_ref = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices_prior, n_iter = 0)
fws_MeOH_noprior_ref = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(105) # p=1
fws_MeOH_prior_1 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices_prior, n_iter = 0)

chosen_indices_prior   = c(40,105) # p=2
chosen_indices_noprior = c(40,105) # p=2
fws_MeOH_prior_2 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices_prior, n_iter = 0)
fws_MeOH_noprior_2 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(108,36,105) # p=3
chosen_indices_noprior = c(108,36,105) # p=3
fws_MeOH_prior_3 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices_prior, n_iter = 0)
fws_MeOH_noprior_3 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior = c(108,101,36,105) # p=4
chosen_indices_noprior = c(108,101,36,105) # p=4
fws_MeOH_prior_4 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices_prior, n_iter = 0)
fws_MeOH_noprior_4 = fedorov_wynn_stan_par(mean_log_det_stan_MeOH, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices_noprior, n_iter = 0)

summary_results = tibble(logP = logP,
                         Type = NAB,
                         prior_ref = fws_MeOH_prior_ref$log_det_FIM,
                          noprior_ref = fws_MeOH_noprior_ref$log_det_FIM,
                          prior_1 = fws_MeOH_prior_1$log_det_FIM,
                          prior_2 = fws_MeOH_prior_2$log_det_FIM,
                          noprior_2 = fws_MeOH_noprior_2$log_det_FIM,
                          prior_3 = fws_MeOH_prior_3$log_det_FIM,
                          noprior_3 = fws_MeOH_noprior_3$log_det_FIM,
                          prior_4 = fws_MeOH_prior_4$log_det_FIM,
                          noprior_4 = fws_MeOH_noprior_4$log_det_FIM) %>%
  pivot_longer(prior_ref:noprior_4, names_to = "method")

p1=ggplot(summary_results, aes(y=method,x=value))+
  geom_boxplot(outlier.size = 0.5)+
 geom_jitter(aes(y=method, x=value, color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="log(|FIM|)", y = "Method")

summary_results_diff = tibble(logP = logP,
                         Type = NAB,
                         fws_prior_ref = fws_MeOH_prior_ref$log_det_FIM,
                          fws_noprior_ref = fws_MeOH_noprior_ref$log_det_FIM,
                          fws_prior_1 = fws_MeOH_prior_1$log_det_FIM,
                          fws_prior_2 = fws_MeOH_prior_2$log_det_FIM,
                          fws_noprior_2 = fws_MeOH_noprior_2$log_det_FIM,
                          fws_prior_3 = fws_MeOH_prior_3$log_det_FIM,
                          fws_noprior_3 = fws_MeOH_noprior_3$log_det_FIM,
                          fws_prior_4 = fws_MeOH_prior_4$log_det_FIM,
                          fws_noprior_4 = fws_MeOH_noprior_4$log_det_FIM) %>%
  mutate(d_prior_1 = (fws_prior_1 - fws_prior_ref)/n_param,
         d_prior_2 = (fws_prior_2 - fws_prior_ref)/n_param,
         d_noprior_2 = (fws_noprior_2 - fws_noprior_ref)/n_param,
         d_prior_3 = (fws_prior_3 - fws_prior_ref)/n_param,
         d_noprior_3 = (fws_noprior_3 - fws_noprior_ref)/n_param,
         d_prior_4 = (fws_prior_4 - fws_prior_ref)/n_param,
         d_noprior_4 = (fws_noprior_4 - fws_noprior_ref)/n_param)%>%
  pivot_longer(d_prior_1:d_noprior_4, names_to = "method")

p2=ggplot(summary_results_diff, aes(y=method,x=exp(value)))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=exp(value), color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="Efficiency relative to the reference design", y = "Method")+
  geom_vline(xintercept = 1, linetype = "dotted")

summary_results_diffprior = tibble(logP = logP,
                         Type = NAB,
                         fws_prior_ref = fws_MeOH_prior_ref$log_det_FIM,
                          fws_noprior_ref = fws_MeOH_noprior_ref$log_det_FIM,
                          fws_prior_2 = fws_MeOH_prior_2$log_det_FIM,
                          fws_noprior_2 = fws_MeOH_noprior_2$log_det_FIM,
                          fws_prior_3 = fws_MeOH_prior_3$log_det_FIM,
                          fws_noprior_3 = fws_MeOH_noprior_3$log_det_FIM,
                          fws_prior_4 = fws_MeOH_prior_4$log_det_FIM,
                          fws_noprior_4 = fws_MeOH_noprior_4$log_det_FIM) %>%
  mutate(d_ref  = (fws_prior_ref-fws_noprior_ref)/n_param,
         d_2 = (fws_prior_2-fws_noprior_2)/n_param,
         d_3 = (fws_prior_3-fws_noprior_3)/n_param,
         d_4 = (fws_prior_4-fws_noprior_4)/n_param)%>%
  pivot_longer(d_ref:d_4, names_to = "method")

p3=ggplot(summary_results_diffprior, aes(y=method,x=exp(value)))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=exp(value), color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="Effect of prior on design efficiency", y = "Method")+
  geom_vline(xintercept = 1, linetype = "dotted")+
  scale_x_continuous(limits = c(0.5,100),
                     trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.01, 100)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))


 my.ggsave(.plot=p1, .filename=paste("single-form-analytes-MeOH-logdFIM-abs.pdf"), .path = figures_dir3)
 my.ggsave.png(.plot=p1, .filename=paste("single-form-analytes-MeOH-logdFIM-abs.png"), .path = figures_dir3)
 my.ggsave(.plot=p2, .filename=paste("single-form-analytes-MeOH-logdFIM-rel.pdf"), .path = figures_dir3)
 my.ggsave.png(.plot=p2, .filename=paste("single-form-analytes-MeOH-logdFIM-rel.png"), .path = figures_dir3)
 my.ggsave(.plot=p3, .filename=paste("single-form-analytes-MeOH-logdFIM-prioreff.pdf"), .path = figures_dir3)
 my.ggsave.png(.plot=p3, .filename=paste("single-form-analytes-MeOH-logdFIM-prioreff.png"), .path = figures_dir3)
 
 
p1
p2
p3
f2_3=p2
f3_3=p3
```
#### Table Summary
```{r table-MeOH}
tab1=summary_results_diff %>% 
  mutate(value = exp(value)) %>%
  group_by(method) %>% 
  summarise(ptc_value = quantile(value, c(0.05, 0.5, 0.95)), q = c(0.05, 0.5, 0.95),
            mean_value = mean(value),
            sd_value = std(value)) %>%
  ungroup() %>%
  mutate(across(c('ptc_value', 'mean_value','sd_value'), round, 2))%>%
  pivot_wider(names_from = "q", values_from = ptc_value, names_prefix = "q")%>%
  mutate(`Efficiency median (5th-95th)` = paste0(q0.5, " (", q0.05, " - ", q0.95, ")"))%>%
  mutate(`Efficiency mean (sd)` = paste0(mean_value, " (", sd_value , ")"))%>%
  select(-starts_with("q"))%>%
  select(-mean_value, -sd_value)%>%
  flextable() %>%
  autofit()

tab1
```

### Table

```{r single-form-MeOH-table}
data_ma_MeOH=hplcparam_candidates_df%>%filter(xpH==0, m==0)%>%
  mutate(line=1:n())

combined_results = list(
prior_ref = fws_MeOH_prior_ref$chosen_indices,
                          noprior_ref = fws_MeOH_noprior_ref$chosen_indices,
                          prior_1 = fws_MeOH_prior_1$chosen_indices,
noprior_1 = 10000+fws_MeOH_prior_1$chosen_indices,
                          prior_2 = fws_MeOH_prior_2$chosen_indices,
                          noprior_2 = fws_MeOH_noprior_2$chosen_indices,
                          prior_3 = fws_MeOH_prior_3$chosen_indices,
                          noprior_3 = fws_MeOH_noprior_3$chosen_indices,
                          prior_4 = fws_MeOH_prior_4$chosen_indices,
                          noprior_4 = fws_MeOH_noprior_4$chosen_indices)

selected_exp = enframe(combined_results)%>%
   unnest(value) %>%
  rename(line=value, Name = name) %>%
  left_join(data_ma_MeOH, by = "line")%>%
  mutate(Modifier = if_else(m==0, "MeOH", "ACN")) %>%
  select(-c(line,xpH,m,td,to,te,fif)) %>%
  mutate(type = if_else(str_detect(Name, 'noprior'), "No prior", "Prior"))%>%
  mutate(across(where(is.numeric), ~replace_na(., -1)))

tab1<-selected_exp %>%
  filter(type == "Prior") %>%
  select(-type)%>%
  as_grouped_data(groups = "Name") %>%
  flextable() 
  
tab2<-selected_exp %>%
  filter(type == "No prior")%>%
    select(-type)%>%
  as_grouped_data(groups = "Name") %>%
  flextable() 

tab2 <- set_formatter(
  tab2, 
  tg = function(x) ifelse(x==-1," ", sprintf("%d", x) ),
  fio = function(x) ifelse(x==-1," ", sprintf("%.2f", x) )
  )

p1 = gen_grob(tab1, fit = "auto", just = "centre")
p2 = gen_grob(tab2, fit = "auto", just = "centre") 

gg<-ggplot()+
       theme(
         panel.background = element_rect(fill='transparent'),
         plot.background = element_rect(fill='transparent', color=NA),
         panel.grid.major = element_blank(),
         panel.grid.minor = element_blank(),
         legend.background = element_rect(fill='transparent'),
         legend.box.background = element_rect(fill='transparent')
       )

plot1 <- gg+p1+p2+ plot_layout(ncol = 3, widths = c(1, 20,20))

my.ggsave(.plot=plot1, .filename=paste("single-form-analytes-MeOH-table.pdf"), .path = tables_dir3)
my.ggsave.png(.plot=plot1, .filename=paste("single-form-analytes-MeOH-table.png"), .path = tables_dir3)

tab1
tab2
```

## Stan simulations
```{r single-form-analytes-MeOH-laplace, eval=F}

chosen_indices = fws_MeOH_prior_ref$chosen_indices # ref
prior_ma_MeOH_ref = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, 10)

chosen_indices = fws_MeOH_noprior_ref$chosen_indices # ref
noprior_ma_MeOH_ref = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices, 10)

chosen_indices = fws_MeOH_prior_1$chosen_indices # p=1
prior_ma_MeOH_1 = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, 10)

chosen_indices = fws_MeOH_prior_2$chosen_indices # p=2
prior_ma_MeOH_2 = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, 10)

chosen_indices = fws_MeOH_noprior_2$chosen_indices # p=2
noprior_ma_MeOH_2 = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices, 10)

chosen_indices = fws_MeOH_prior_3$chosen_indices # p=3
prior_ma_MeOH_3 = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, 10)

chosen_indices = fws_MeOH_noprior_3$chosen_indices # p=3
noprior_ma_MeOH_3 = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices, 10)

chosen_indices = fws_MeOH_prior_4$chosen_indices # p=4
prior_ma_MeOH_4 = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_prior_ma_MeOH, inits_MeOH, chosen_indices, 10)

chosen_indices = fws_MeOH_noprior_4$chosen_indices # p=4
noprior_ma_MeOH_4 = fun_predict_stan_results_MeOH(mod_analytes_MeOH_sim, datastruct_noprior_ma_MeOH, inits_MeOH, chosen_indices, 10)
```

#### Gradient conditions
```{r single-form-analytes-gra-MeOH-summary}
chosen_indices = fws_MeOH_prior_3$chosen_indices # p=3

p31=hplcparam_candidates_df %>%
  filter(xpH==0, m==0)%>%
  mutate(lines = row_number())%>%
  left_join(prior_ma_MeOH_3$cresults%>%mutate(lines=as.integer(c))) %>%
  mutate(selected = factor(if_else(lines %in% chosen_indices,1,0))) %>%
  mutate(m_f = if_else(m==0, "MeOH", "ACN")) %>%
  ggplot(aes(x=tg, y=fio, z=qvar)) +
  geom_contour_filled()+
  geom_point(data = . %>% filter(selected==1))+
  facet_wrap(~m_f)
chosen_indices = fws_MeOH_noprior_3$chosen_indices # p=5
p32=hplcparam_candidates_df %>%
  filter(xpH==0, m==0)%>%
  mutate(lines = row_number())%>%
  left_join(noprior_ma_MeOH_3$cresults%>%mutate(lines=as.integer(c))) %>%
  mutate(selected = factor(if_else(lines %in% chosen_indices,1,0))) %>%
  mutate(m_f = if_else(m==0, "MeOH", "ACN")) %>%
  ggplot(aes(x=tg, y=fio, z=qvar)) +
  geom_contour_filled()+
  geom_point(data = . %>% filter(selected==1))+
  facet_wrap(~m_f)

iresults = rbind(
                 prior_ma_MeOH_ref$iresults%>%
                   mutate(method ="prior_ref"),
                 noprior_ma_MeOH_ref$iresults%>%
                   mutate(method ="noprior_ref"),
                prior_ma_MeOH_1$iresults%>%
                   mutate(method ="prior_1"),
                 prior_ma_MeOH_2$iresults%>%
                   mutate(method ="prior_2"),
                 noprior_ma_MeOH_2$iresults%>%
                   mutate(method ="noprior_2"),
                 prior_ma_MeOH_3$iresults%>%
                   mutate(method ="prior_3"),
                 noprior_ma_MeOH_3$iresults%>%
                   mutate(method ="noprior_3"),
                 prior_ma_MeOH_4$iresults%>%
                   mutate(method ="prior_4"),
                 noprior_ma_MeOH_4$iresults%>%
                   mutate(method ="noprior_4")) %>%
  mutate(ivar = if_else(ivar>1e6,1e6,ivar))%>%
  left_join(tibble(i=as.factor(seq(1,nAnalytes*n_rep,1)),logP=logP, Type=NAB))


p33_1=iresults %>%
ggplot(aes(y=method,x=ivar))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=ivar, color=logP),size=0.5, alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="max(Var)", y = "Method")+
  geom_vline(xintercept = 1, linetype="dotted")+
  coord_cartesian(xlim=c(0.1,100))+
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))
p33_2=iresults %>%
ggplot(aes(y=method,x=ivar))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=ivar, color=logP),size=0.5, alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="max(Var)", y = "Method")+
  geom_vline(xintercept = 1, linetype="dotted")+
  coord_cartesian(xlim=c(100,1000000))+
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33=p33_1+p33_2+
  plot_layout(widths = c(3, 1),axes = "collect")


idx_exemple_analytes = iresults %>%
  filter(method=="prior_ref") %>%
  arrange(ivar)%>%
  slice(which(row_number() %% 100 == 1)) %>%
  select(i)%>%pull()

iresults %>%
  group_by(method) %>%
  summarise(`<=1x` = mean(ivar<=1),
  `<=2x` = mean(ivar<=2),
  `<=3x` = mean(ivar<=3))%>%
  flextable() 

f55_3=iresults %>%
  group_by(method) %>%
  summarise(`<=1x` = mean(ivar<=1),
  `<=2x` = mean(ivar<=2),
  `<=3x` = mean(ivar<=3)) %>%
  pivot_longer(`<=1x`:`<=3x`, names_to = "target") %>%
  ggplot(aes(y=method,x=value,color=as.factor(target)))+
  geom_point()+
  labs(x="Probability", y = "Method", color = "target")+
  geom_vline(xintercept = 0.9, linetype="dotted")

my.ggsave(.plot=f55_3, .filename=paste("single-form-analytes-MeOH-gra-prob.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=f55_3, .filename=paste("single-form-analytes-MeOH-gra-prob.png"), .path = figures_dir1)
my.ggsave(.plot=p31, .filename=paste("single-form-analytes-MeOH-gra-prior-p5.pdf"), .path = figures_dir3)
my.ggsave.png(.plot=p31, .filename=paste("single-form-analytes-MeOH-gra-prior-p5.png"), .path = figures_dir3)
my.ggsave(.plot=p32, .filename=paste("single-form-analytes-MeOH-gra-noprior-p5.pdf"), .path = figures_dir3)
my.ggsave.png(.plot=p32, .filename=paste("single-form-analytes-MeOH-gra-noprior-p5.png"), .path = figures_dir3)
my.ggsave(.plot=p33+plot_layout(guides = "collect"), .filename=paste("single-form-analytes-MeOH-gra-maxvar.pdf"), .path = figures_dir3)
my.ggsave.png(.plot=p33+plot_layout(guides = "collect"), .filename=paste("single-form-analytes-MeOH-gra-maxvar.png"), .path = figures_dir3)

p31
p32
p33
f33_3=p33
f55_3
```

#### Isocratic conditions
```{r single-form-analytes-MeOH-izo-summary}
fi_temp = tibble(c=1:11, fi=seq(0,1,by=0.1))

plot_id = function(results) {
  results %>%
  ggplot(aes(x=fi, y=CV/10)) +
  geom_line()+
  geom_ribbon(aes(x=fi, ymin = llog10tr, ymax = ulog10tr), alpha = 0.4, col = NA) +
  geom_line(aes(x=fi, y=mlog10tr), col = "black", size=0.25) +
     scale_y_continuous(
    name = "log(tr)",
    sec.axis = sec_axis(~.*10, name="%CV")) +
  scale_x_continuous(breaks = seq(0,1,by=0.2))+
  facet_grid(i~mod) +
  geom_hline(yintercept = 1, linetype=2)+
  coord_cartesian(ylim=c(0,4))
}


results_prior_ma_MeOH_ref<-prior_ma_MeOH_ref$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_noprior_ma_MeOH_ref<-noprior_ma_MeOH_ref$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_prior_ma_MeOH_1<-prior_ma_MeOH_1$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_prior_ma_MeOH_2<-prior_ma_MeOH_2$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = mrgmisc::ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])
results_noprior_ma_MeOH_2<-noprior_ma_MeOH_2$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_prior_ma_MeOH_3<-prior_ma_MeOH_3$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])
results_noprior_ma_MeOH_3<-noprior_ma_MeOH_3$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_prior_ma_MeOH_4<-prior_ma_MeOH_4$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])
results_noprior_ma_MeOH_4<-noprior_ma_MeOH_4$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

plots_results_prior_ma_MeOH_ref = map(results_prior_ma_MeOH_ref,plot_id)
plots_results_noprior_ma_MeOH_ref = map(results_noprior_ma_MeOH_ref,plot_id)
plots_results_prior_ma_MeOH_1 = map(results_prior_ma_MeOH_1,plot_id)
plots_results_prior_ma_MeOH_2 = map(results_prior_ma_MeOH_2,plot_id)
plots_results_noprior_ma_MeOH_2 = map(results_noprior_ma_MeOH_2,plot_id)
plots_results_prior_ma_MeOH_3 = map(results_prior_ma_MeOH_3,plot_id)
plots_results_noprior_ma_MeOH_3 = map(results_noprior_ma_MeOH_3,plot_id)
plots_results_prior_ma_MeOH_4 = map(results_prior_ma_MeOH_4,plot_id)
plots_results_noprior_ma_MeOH_4 = map(results_noprior_ma_MeOH_4,plot_id)

my.ggsave(.plot=plots_results_prior_ma_MeOH_ref[[1]], .filename=paste("plots-results-prior-ma-MeOH-ref.pdf"), .path = figures_dir3)
my.ggsave.png(.plot=plots_results_prior_ma_MeOH_ref[[1]], .filename=paste("plots-results-prior-ma-MeOH-ref.png"), .path = figures_dir3)
my.ggsave(.plot=plots_results_prior_ma_MeOH_3[[1]], .filename=paste("plots-results-prior-ma-MeOH-3.pdf"), .path = figures_dir3)
my.ggsave.png(.plot=plots_results_prior_ma_MeOH_3[[1]], .filename=paste("plots-results-prior-ma-MeOH-3.png"), .path = figures_dir3)

plots_results_prior_ma_MeOH_ref
plots_results_noprior_ma_MeOH_ref
plots_results_prior_ma_MeOH_1
plots_results_prior_ma_MeOH_2
plots_results_noprior_ma_MeOH_2
plots_results_prior_ma_MeOH_3
plots_results_noprior_ma_MeOH_3
plots_results_prior_ma_MeOH_4
plots_results_noprior_ma_MeOH_4

# map(show, function(i) plots_results_prior_ma_ref[[i]])
# map(show, function(i) plots_results_noprior_ma_ref[[i]])
# map(show, function(i) plots_results_prior_ma_4[[i]])
# map(show, function(i) plots_results_noprior_ma_4[[i]])
# map(show, function(i) plots_results_prior_ma_5[[i]])
# map(show, function(i) plots_results_noprior_ma_5[[i]])
```

##### Combined
```{r single-form-analytes-izo-summary-MeOH-combined}
fi_temp = tibble(c=1:11, fi=seq(0,1,by=0.1))

izoresults = rbind( prior_ma_MeOH_ref$izoresults%>%
                   mutate(method ="prior_ref"),
                 noprior_ma_MeOH_ref$izoresults%>%
                   mutate(method ="noprior_ref"),
                prior_ma_MeOH_1$izoresults%>%
                   mutate(method ="prior_1"),
                 prior_ma_MeOH_2$izoresults%>%
                   mutate(method ="prior_2"),
                 noprior_ma_MeOH_2$izoresults%>%
                   mutate(method ="noprior_2"),
                 prior_ma_MeOH_3$izoresults%>%
                   mutate(method ="prior_3"),
                 noprior_ma_MeOH_3$izoresults%>%
                   mutate(method ="noprior_3"),
                 prior_ma_MeOH_4$izoresults%>%
                   mutate(method ="prior_4"),
                 noprior_ma_MeOH_4$izoresults%>%
                   mutate(method ="noprior_4")) %>%
  filter(mlog10tr<=log10(100))%>%
  filter(mlog10tr>=log10(5))%>%
  mutate(c = as.numeric(c),
         i=as.integer(i)) %>%
  arrange(i,method,c)%>%
  group_by(i,method) %>%
  summarise(imaxcv = max(CV), imincv = min(CV), aveCV = pracma::trapz(c, CV)/(n()-1)) %>%
  mutate(imaxcv = if_else(imaxcv>1e4,1e4,imaxcv))%>%
  left_join(tibble(i=as.integer(seq(1,nAnalytes*n_rep,1)),logP=logP, Type=NAB))
 
p33_1=izoresults %>%
  ggplot(aes(y=method,x=imaxcv))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=imaxcv, color=logP),size=0.5, alpha=0.1)+
  geom_boxplot(aes(y=method,x=imincv),outlier.size = 0, color="lightblue", alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="min(CV), max(CV)", y = "Method")+
  
  coord_cartesian(xlim=c(1,100))+   
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33_2=izoresults %>%
  ggplot(aes(y=method,x=imaxcv))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=imaxcv, color=logP),size=0.5, alpha=0.1)+
  geom_boxplot(aes(y=method,x=imincv),outlier.size = 0, color="lightblue", alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="min(CV), max(CV)", y = "Method")+
   
  coord_cartesian(xlim=c(100,10000))+    
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33=p33_1+p33_2+
  plot_layout(widths = c(3, 1),axes = "collect")

f44_3 = p33
my.ggsave(.plot=p33+plot_layout(guides = "collect"), .filename=paste("N-MeOH-izo-combined-CV.pdf"), .path = figures_dir3)
my.ggsave.png(.plot=p33+plot_layout(guides = "collect"), .filename=paste("N-MeOH-izo-combined-CV.png"), .path = figures_dir3)
```

# Stan multiple analytes. Single form analytes. fi and tg for ACN as design variables

## Compile stan models
```{r single-form-analytes-ACN-compilation}
mod_analytes_ACN_gq= cmdstan_model("../stan/hplc-gra-single-form-analytes-ACN-gq.stan", 
                                    stanc_options = list("O1"))
mod_analytes_ACN_sim = cmdstan_model("../stan/hplc-gra-single-form-analytes-ACN-sim.stan",
                                      stanc_options = list("O1"))
mod_analytes_ACN = cmdstan_model("../stan/hplc-gra-single-form-analytes-ACN.stan", 
                                  stanc_options = list("O1"))
mod_analytes_ACN$compile(compile_model_methods=TRUE,force_recompile=TRUE)
```

## Simulate retention times and create datasets

Probability of occurrence 0.4 neutral, 0.3 A, 0.3 B with $log P$ being sampled from 2.2 $\pm$ 2 and constrained between 0.5 and 7.
  
```{r single-form-analytes-ACN-simulations}
data_ma_ACN=hplcparam_candidates_df%>%filter(xpH==0, m==1)
nObs = nrow(data_ma_ACN);
nAnalytes =50;
cseed = 1234;
n_param = 3;
n_rep = 10;

datastruct_noprior_ma_ACN=list()
datastruct_prior_ma_ACN=list()
inits_ACN = list()

for (i in 1:n_rep) {
datastruct_prior_ma_ACN[[i]] = list(nObs=nObs,
                   nAnalytes=nAnalytes,
                   steps = 4 + 6*data_ma_ACN$m,
                   hplcparam=as.matrix(data_ma_ACN%>%dplyr::select(c(tg,td,to,te,fio,fif,m))),
                   include_prior = 1,
                   run_estimation=1,
                   nSel = nObs,
                   selected = 1:nObs)

fit_ACN_gq  = mod_analytes_ACN_gq$sample(data = datastruct_prior_ma_ACN[[i]],
                                         seed = cseed,
                                         fixed_param = TRUE,
                                         chains = 1,
                                         iter_sampling=1)

datastruct_prior_ma_ACN[[i]]$trobs = matrix(fit_ACN_gq$draws(format = "matrix", variable = "y_hat_sim"),nAnalytes,nObs)
datastruct_prior_ma_ACN[[i]]$logPobs = fit_ACN_gq$draws(format = "matrix", variable = "logPobs")[1:nAnalytes]
datastruct_prior_ma_ACN[[i]]$N1A2B3 = fit_ACN_gq$draws(format = "matrix", variable = "N1A2B3")[1:nAnalytes]
param = matrix(fit_ACN_gq$draws(format = "matrix", variable = "paramsim"),nAnalytes,2)


datastruct_noprior_ma_ACN[[i]]=datastruct_prior_ma_ACN[[i]];
datastruct_noprior_ma_ACN[[i]]$include_prior = 0.01;

inits_ACN[[i]]=param

cseed = cseed+1
}

mean_log_det_stan_ACN = function(data, init, chosen_indices, S){
  
init_ma = function(){list(param=init)}
  
data$selected = chosen_indices;
data$nSel = length(chosen_indices);

 fit_ACN_opt  = mod_analytes_ACN$optimize(
   data = data,
   output_dir = here::here("stanfiles"),
   output_basename = S,
   seed = cseed,
   init = init_ma,
   jacobian = TRUE,
   show_messages = F)
 
 mode=fit_ACN_opt$unconstrain_variables(list(param = fit_ACN_opt$mle("param")))
 hessian = fit_ACN_opt$hessian(unconstrained_variables = mode)$hessian

logdet = unlist(purrr::map(1:data$nAnalytes,\(i) log(det(-hessian[((i-1)*2+1):((i-1)*2+2),((i-1)*2+1):((i-1)*2+2)]))))

return(logdet)
}

chosen_indices = c(33,105)

# quick test:
z_prior = parallel::mclapply(1:n_rep,\(i) mean_log_det_stan_ACN(datastruct_prior_ma_ACN[[i]], inits_ACN[[i]], chosen_indices, i), mc.cores=10)
z_noprior = parallel::mclapply(1:n_rep,\(i) mean_log_det_stan_ACN(datastruct_noprior_ma_ACN[[i]], inits_ACN[[i]], chosen_indices, i), mc.cores=10)
test = c(mean(unlist(z_prior)),mean(unlist(z_noprior)))
test
c("11.03219 10.47497")

logP = unlist(purrr::map(1:length(datastruct_prior_ma_ACN),\(i) datastruct_prior_ma_ACN[[i]]$logPobs))
NAB = unlist(purrr::map(1:length(datastruct_prior_ma_ACN),\(i) datastruct_prior_ma_ACN[[i]]$N1A2B3))
```

## Optimization
```{r single-form-analytes-ACN-optimization, eval=FALSE}
chosen_indices = c(105) # initial values
fws_ACN_prior_1 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, n_iter = 100)

chosen_indices = c(44,105) # initial values
fws_ACN_prior_2 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, n_iter = 100)
chosen_indices = c(39,105) # initial values
fws_ACN_noprior_2 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices, n_iter = 100)

chosen_indices = c(39,105,108) # initial values
fws_ACN_prior_3 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, n_iter = 100)
chosen_indices = c(35,105,108) # initial values
fws_ACN_noprior_3 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices, n_iter = 100)

chosen_indices = c(101,39,105,108) # initial values
fws_ACN_prior_4 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, n_iter = 100)
chosen_indices = c(101,39,105,108) # initial values
fws_ACN_noprior_4 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices, n_iter = 100)
```

## Optimization tg constrained
```{r single-form-analytes-optimization-ACN-tgconstrain, eval=FALSE}
chosen_indices = c(32,105) # initial values
fwstgc_ACN_prior_2 = fedorov_wynn_stan_par_tgconstraint(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, tg_constraint = 360, n_iter = 100)
chosen_indices = c(31,105) # initial values
fwstgc_ACN_noprior_2 = fedorov_wynn_stan_par_tgconstraint(mean_log_det_stan_ACN, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices, tg_constraint = 360, n_iter = 100)
```

### Read the results and compare
```{r single-form-analytes-ACN-logDet-summary}
chosen_indices_prior = c(33,105) # ref
chosen_indices_noprior= c(33,105) # ref
fws_ACN_prior_ref = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices_prior, n_iter = 0)
fws_ACN_noprior_ref = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(105) # p=1
fws_ACN_prior_1 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices_prior, n_iter = 0)

chosen_indices_prior   = c(44,105) # p=2
chosen_indices_noprior = c(39,105) # p=2
fws_ACN_prior_2 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices_prior, n_iter = 0)
fws_ACN_noprior_2 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior   = c(39,105,108) # p=3
chosen_indices_noprior = c(39,105,108) # p=3
fws_ACN_prior_3 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices_prior, n_iter = 0)
fws_ACN_noprior_3 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices_noprior, n_iter = 0)

chosen_indices_prior = c(101,39,105,108) # p=4
chosen_indices_noprior = c(101,39,105,108) # p=4
fws_ACN_prior_4 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_prior_ma_ACN, inits_ACN, chosen_indices_prior, n_iter = 0)
fws_ACN_noprior_4 = fedorov_wynn_stan_par(mean_log_det_stan_ACN, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices_noprior, n_iter = 0)

summary_results = tibble(logP = logP,
                         Type = NAB,
                         prior_ref = fws_ACN_prior_ref$log_det_FIM,
                          noprior_ref = fws_ACN_noprior_ref$log_det_FIM,
                          prior_1 = fws_ACN_prior_1$log_det_FIM,
                          prior_2 = fws_ACN_prior_2$log_det_FIM,
                          noprior_2 = fws_ACN_noprior_2$log_det_FIM,
                          prior_3 = fws_ACN_prior_3$log_det_FIM,
                          noprior_3 = fws_ACN_noprior_3$log_det_FIM,
                          prior_4 = fws_ACN_prior_4$log_det_FIM,
                          noprior_4 = fws_ACN_noprior_4$log_det_FIM) %>%
  pivot_longer(prior_ref:noprior_4, names_to = "method")

p1=ggplot(summary_results, aes(y=method,x=value))+
  geom_boxplot(outlier.size = 0.5)+
 geom_jitter(aes(y=method, x=value, color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="log(|FIM|)", y = "Method")

summary_results_diff = tibble(logP = logP,
                         Type = NAB,
                         fws_prior_ref = fws_ACN_prior_ref$log_det_FIM,
                          fws_noprior_ref = fws_ACN_noprior_ref$log_det_FIM,
                          fws_prior_1 = fws_ACN_prior_1$log_det_FIM,
                          fws_prior_2 = fws_ACN_prior_2$log_det_FIM,
                          fws_noprior_2 = fws_ACN_noprior_2$log_det_FIM,
                          fws_prior_3 = fws_ACN_prior_3$log_det_FIM,
                          fws_noprior_3 = fws_ACN_noprior_3$log_det_FIM,
                          fws_prior_4 = fws_ACN_prior_4$log_det_FIM,
                          fws_noprior_4 = fws_ACN_noprior_4$log_det_FIM) %>%
  mutate(d_prior_1 = (fws_prior_1 - fws_prior_ref)/n_param,
         d_prior_2 = (fws_prior_2 - fws_prior_ref)/n_param,
         d_noprior_2 = (fws_noprior_2 - fws_noprior_ref)/n_param,
         d_prior_3 = (fws_prior_3 - fws_prior_ref)/n_param,
         d_noprior_3 = (fws_noprior_3 - fws_noprior_ref)/n_param,
         d_prior_4 = (fws_prior_4 - fws_prior_ref)/n_param,
         d_noprior_4 = (fws_noprior_4 - fws_noprior_ref)/n_param)%>%
  pivot_longer(d_prior_1:d_noprior_4, names_to = "method")

p2=ggplot(summary_results_diff, aes(y=method,x=exp(value)))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=exp(value), color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="Efficiency relative to the reference design", y = "Method")+
  geom_vline(xintercept = 1, linetype = "dotted")

summary_results_diffprior = tibble(logP = logP,
                         Type = NAB,
                         fws_prior_ref = fws_ACN_prior_ref$log_det_FIM,
                          fws_noprior_ref = fws_ACN_noprior_ref$log_det_FIM,
                          fws_prior_2 = fws_ACN_prior_2$log_det_FIM,
                          fws_noprior_2 = fws_ACN_noprior_2$log_det_FIM,
                          fws_prior_3 = fws_ACN_prior_3$log_det_FIM,
                          fws_noprior_3 = fws_ACN_noprior_3$log_det_FIM,
                          fws_prior_4 = fws_ACN_prior_4$log_det_FIM,
                          fws_noprior_4 = fws_ACN_noprior_4$log_det_FIM) %>%
  mutate(d_ref  = (fws_prior_ref-fws_noprior_ref)/n_param,
         d_2 = (fws_prior_2-fws_noprior_2)/n_param,
         d_3 = (fws_prior_3-fws_noprior_3)/n_param,
         d_4 = (fws_prior_4-fws_noprior_4)/n_param)%>%
  pivot_longer(d_ref:d_4, names_to = "method")

p3=ggplot(summary_results_diffprior, aes(y=method,x=exp(value)))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=exp(value), color=logP),size=0.5, alpha=0.1)+
  scale_color_continuous(type="viridis")+
  labs(x="Effect of prior on design efficiency", y = "Method")+
  geom_vline(xintercept = 1, linetype = "dotted")+
  scale_x_continuous(limits = c(0.5,100),
                     trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.01, 100)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))


my.ggsave(.plot=p1, .filename=paste("single-form-analytes-ACN-logdFIM-abs.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=p1, .filename=paste("single-form-analytes-ACN-logdFIM-abs.png"), .path = figures_dir4)
my.ggsave(.plot=p2, .filename=paste("single-form-analytes-ACN-logdFIM-rel.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=p2, .filename=paste("single-form-analytes-ACN-logdFIM-rel.png"), .path = figures_dir4)
my.ggsave(.plot=p3, .filename=paste("single-form-analytes-ACN-logdFIM-prioreff.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=p3, .filename=paste("single-form-analytes-ACN-logdFIM-prioreff.png"), .path = figures_dir4)


p1
p2
p3
f2_4 = p2
f3_4 = p3
```

#### Table Summary
```{r table-ACN}
tab1=summary_results_diff %>% 
  mutate(value = exp(value)) %>%
  group_by(method) %>% 
  summarise(ptc_value = quantile(value, c(0.05, 0.5, 0.95)), q = c(0.05, 0.5, 0.95),
            mean_value = mean(value),
            sd_value = std(value)) %>%
  ungroup() %>%
  mutate(across(c('ptc_value', 'mean_value','sd_value'), round, 2))%>%
  pivot_wider(names_from = "q", values_from = ptc_value, names_prefix = "q")%>%
  mutate(`Efficiency median (5th-95th)` = paste0(q0.5, " (", q0.05, " - ", q0.95, ")"))%>%
  mutate(`Efficiency mean (sd)` = paste0(mean_value, " (", sd_value , ")"))%>%
  select(-starts_with("q"))%>%
  select(-mean_value, -sd_value)%>%
  flextable() %>%
  autofit()

tab1
```

### Table

```{r single-form-ACN-table}
data_ma_ACN=hplcparam_candidates_df%>%filter(xpH==0, m==1)%>%
  mutate(line=1:n())

combined_results = list(
prior_ref = fws_MeOH_prior_ref$chosen_indices,
                          noprior_ref = fws_ACN_noprior_ref$chosen_indices,
                          prior_1 = fws_ACN_prior_1$chosen_indices,
noprior_1 = 10000+fws_MeOH_prior_1$chosen_indices,
                          prior_2 = fws_ACN_prior_2$chosen_indices,
                          noprior_2 = fws_ACN_noprior_2$chosen_indices,
                          prior_3 = fws_ACN_prior_3$chosen_indices,
                          noprior_3 = fws_ACN_noprior_3$chosen_indices,
                          prior_4 = fws_ACN_prior_4$chosen_indices,
                          noprior_4 = fws_ACN_noprior_4$chosen_indices)

selected_exp = enframe(combined_results)%>%
   unnest(value) %>%
  rename(line=value, Name = name) %>%
  left_join(data_ma_ACN, by = "line")%>%
    arrange(Name,tg, fio)%>%
  mutate(Modifier = if_else(m==0, "MeOH", "ACN")) %>%
  select(-c(line,xpH,m,td,to,te,fif)) %>%
  mutate(type = if_else(str_detect(Name, 'noprior'), "No prior", "Prior"))%>%
  mutate(across(where(is.numeric), ~replace_na(., -1)))

tab1<-selected_exp %>%
  filter(type == "Prior") %>%
  select(-type)%>%
  as_grouped_data(groups = "Name") %>%
  flextable() 
  
tab2<-selected_exp %>%
  filter(type == "No prior")%>%
    select(-type)%>%
  as_grouped_data(groups = "Name") %>%
  flextable() 

tab2 <- set_formatter(
  tab2, 
  tg = function(x) ifelse(x==-1," ", sprintf("%d", x) ),
  fio = function(x) ifelse(x==-1," ", sprintf("%.2f", x) )
  )

p1 = gen_grob(tab1, fit = "auto", just = "centre")
p2 = gen_grob(tab2, fit = "auto", just = "centre") 

gg<-ggplot()+
       theme(
         panel.background = element_rect(fill='transparent'),
         plot.background = element_rect(fill='transparent', color=NA),
         panel.grid.major = element_blank(),
         panel.grid.minor = element_blank(),
         legend.background = element_rect(fill='transparent'),
         legend.box.background = element_rect(fill='transparent')
       )

plot1 <- gg+p1+p2+ plot_layout(ncol = 3, widths = c(1, 20,20))

my.ggsave(.plot=plot1, .filename=paste("single-form-analytes-ACN-table.pdf"), .path = tables_dir4)
my.ggsave.png(.plot=plot1, .filename=paste("single-form-analytes-ACN-table.png"), .path = tables_dir4)

tab1
tab2
```

## Stan simulations
```{r single-form-analytes-ACN-laplace, eval=F}
chosen_indices = fws_ACN_prior_ref$chosen_indices # ref
prior_ma_ACN_ref = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, 10)

chosen_indices = fws_ACN_noprior_ref$chosen_indices # ref
noprior_ma_ACN_ref = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices, 10)

chosen_indices = fws_ACN_prior_1$chosen_indices # p=1
prior_ma_ACN_1 = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, 10)

chosen_indices = fws_ACN_prior_2$chosen_indices # p=2
prior_ma_ACN_2 = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, 10)

chosen_indices = fws_ACN_noprior_2$chosen_indices # p=2
noprior_ma_ACN_2 = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices, 10)

chosen_indices = fws_ACN_prior_3$chosen_indices # p=3
prior_ma_ACN_3 = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, 10)

chosen_indices = fws_ACN_noprior_3$chosen_indices # p=3
noprior_ma_ACN_3 = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices, 10)

chosen_indices = fws_ACN_prior_4$chosen_indices # p=4
prior_ma_ACN_4 = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_prior_ma_ACN, inits_ACN, chosen_indices, 10)

chosen_indices = fws_ACN_noprior_4$chosen_indices # p=4
noprior_ma_ACN_4 = fun_predict_stan_results_ACN(mod_analytes_ACN_sim, datastruct_noprior_ma_ACN, inits_ACN, chosen_indices, 10)

```

#### Gradient conditions
```{r single-form-analytes-gra-ACN-summary}
chosen_indices = fws_ACN_prior_3$chosen_indices # p=3

p31=hplcparam_candidates_df %>%
  filter(xpH==0, m==0)%>%
  mutate(lines = row_number())%>%
  left_join(prior_ma_ACN_3$cresults%>%mutate(lines=as.integer(c))) %>%
  mutate(selected = factor(if_else(lines %in% chosen_indices,1,0))) %>%
  mutate(m_f = if_else(m==0, "ACN", "ACN")) %>%
  ggplot(aes(x=tg, y=fio, z=qvar)) +
  geom_contour_filled()+
  geom_point(data = . %>% filter(selected==1))+
  facet_wrap(~m_f)
chosen_indices = fws_ACN_noprior_3$chosen_indices # p=5
p32=hplcparam_candidates_df %>%
  filter(xpH==0, m==0)%>%
  mutate(lines = row_number())%>%
  left_join(noprior_ma_ACN_3$cresults%>%mutate(lines=as.integer(c))) %>%
  mutate(selected = factor(if_else(lines %in% chosen_indices,1,0))) %>%
  mutate(m_f = if_else(m==0, "ACN", "ACN")) %>%
  ggplot(aes(x=tg, y=fio, z=qvar)) +
  geom_contour_filled()+
  geom_point(data = . %>% filter(selected==1))+
  facet_wrap(~m_f)

iresults = rbind( prior_ma_ACN_ref$iresults%>%
                   mutate(method ="prior_ref"),
                 noprior_ma_ACN_ref$iresults%>%
                   mutate(method ="noprior_ref"),
                prior_ma_ACN_1$iresults%>%
                   mutate(method ="prior_1"),
                 prior_ma_ACN_2$iresults%>%
                   mutate(method ="prior_2"),
                 noprior_ma_ACN_2$iresults%>%
                   mutate(method ="noprior_2"),
                 prior_ma_ACN_3$iresults%>%
                   mutate(method ="prior_3"),
                 noprior_ma_ACN_3$iresults%>%
                   mutate(method ="noprior_3"),
                 prior_ma_ACN_4$iresults%>%
                   mutate(method ="prior_4"),
                 noprior_ma_ACN_4$iresults%>%
                   mutate(method ="noprior_4")) %>%
  mutate(ivar = if_else(ivar>1e6,1e6,ivar))%>%
  left_join(tibble(i=as.factor(seq(1,nAnalytes*n_rep,1)),logP=logP, Type=NAB))


p33_1=iresults %>%
ggplot(aes(y=method,x=ivar))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=ivar, color=logP),size=0.5, alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="max(Var)", y = "Method")+
  geom_vline(xintercept = 1, linetype="dotted")+
  coord_cartesian(xlim=c(0.1,100))+
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))
p33_2=iresults %>%
ggplot(aes(y=method,x=ivar))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=ivar, color=logP),size=0.5, alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="max(Var)", y = "Method")+
  geom_vline(xintercept = 1, linetype="dotted")+
  coord_cartesian(xlim=c(100,1000000))+
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(0.1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33=p33_1+p33_2+
  plot_layout(widths = c(3, 1),axes = "collect")


idx_exemple_analytes = iresults %>%
  filter(method=="prior_ref") %>%
  arrange(ivar)%>%
  slice(which(row_number() %% 100 == 1)) %>%
  select(i)%>%pull()

iresults %>%
  group_by(method) %>%
  summarise(`<=1x` = mean(ivar<=1),
  `<=2x` = mean(ivar<=2),
  `<=3x` = mean(ivar<=3)) %>%
  flextable() 

f55_4=iresults %>%
  group_by(method) %>%
  summarise(`<=1x` = mean(ivar<=1),
  `<=2x` = mean(ivar<=2),
  `<=3x` = mean(ivar<=3)) %>%
  pivot_longer(`<=1x`:`<=3x`, names_to = "target") %>%
  ggplot(aes(y=method,x=value,color=as.factor(target)))+
  geom_point()+
  labs(x="Probability", y = "Method", color = "target")+
  geom_vline(xintercept = 0.9, linetype="dotted")

my.ggsave(.plot=f55_4, .filename=paste("single-form-analytes-ACN-gra-prob.pdf"), .path = figures_dir1)
my.ggsave.png(.plot=f55_4, .filename=paste("single-form-analytes-ACN-gra-prob.png"), .path = figures_dir1)
my.ggsave(.plot=p31, .filename=paste("single-form-analytes-ACN-gra-prior-p5.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=p31, .filename=paste("single-form-analytes-ACN-gra-prior-p5.png"), .path = figures_dir4)
my.ggsave(.plot=p32, .filename=paste("single-form-analytes-gra-ACN-noprior-p5.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=p32, .filename=paste("single-form-analytes-ACN-gra-noprior-p5.png"), .path = figures_dir4)
my.ggsave(.plot=p33+plot_layout(guides = "collect"), .filename=paste("single-form-analytes-gra-ACN-maxvar.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=p33+plot_layout(guides = "collect"), .filename=paste("single-form-analytes-ACN-gra-maxvar.png"), .path = figures_dir4)

p31
p32
p33
f33_4=p33
f55_4
```

#### Isocratic conditions
```{r single-form-analytes-ACN-izo-summary}
fi_temp = tibble(c=1:11, fi=seq(0,1,by=0.1))

plot_id = function(results) {
  results %>%
  ggplot(aes(x=fi, y=CV/10)) +
  geom_line()+
  geom_ribbon(aes(x=fi, ymin = llog10tr, ymax = ulog10tr), alpha = 0.4, col = NA) +
     geom_line(aes(x=fi, y=mlog10tr), col = "black", size=0.25) +
     scale_y_continuous(
    name = "log(tr)",
    sec.axis = sec_axis(~.*10, name="%CV")) +
  scale_x_continuous(breaks = seq(0,1,by=0.2))+
  facet_grid(i~mod) +
  geom_hline(yintercept = 1, linetype=2)+
  coord_cartesian(ylim=c(0,4))
}


results_prior_ma_ACN_ref<-prior_ma_ACN_ref$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_noprior_ma_ACN_ref<-noprior_ma_ACN_ref$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_prior_ma_ACN_1<-prior_ma_ACN_1$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_prior_ma_ACN_2<-prior_ma_ACN_2$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = mrgmisc::ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])
results_noprior_ma_ACN_2<-noprior_ma_ACN_2$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_prior_ma_ACN_3<-prior_ma_ACN_3$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])
results_noprior_ma_ACN_3<-noprior_ma_ACN_3$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

results_prior_ma_ACN_4<-prior_ma_ACN_4$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])
results_noprior_ma_ACN_4<-noprior_ma_ACN_4$izoresults%>%
  mutate(c=as.integer(c),
         i=as.integer(i)) %>%
    left_join(fi_temp) %>%
    filter(i %in% idx_exemple_analytes) %>%
  mutate(PLOTS = ids_per_plot(i,id_per_plot = 5))%>%
  split(.[["PLOTS"]])

plots_results_prior_ma_ACN_ref = map(results_prior_ma_ACN_ref,plot_id)
plots_results_noprior_ma_ACN_ref = map(results_noprior_ma_ACN_ref,plot_id)
plots_results_prior_ma_ACN_1 = map(results_prior_ma_ACN_1,plot_id)
plots_results_prior_ma_ACN_2 = map(results_prior_ma_ACN_2,plot_id)
plots_results_noprior_ma_ACN_2 = map(results_noprior_ma_ACN_2,plot_id)
plots_results_prior_ma_ACN_3 = map(results_prior_ma_ACN_3,plot_id)
plots_results_noprior_ma_ACN_3 = map(results_noprior_ma_ACN_3,plot_id)
plots_results_prior_ma_ACN_4 = map(results_prior_ma_ACN_4,plot_id)
plots_results_noprior_ma_ACN_4 = map(results_noprior_ma_ACN_4,plot_id)

my.ggsave(.plot=plots_results_prior_ma_ACN_ref[[1]], .filename=paste("plots-results-prior-ma-ACN-ref.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=plots_results_prior_ma_ACN_ref[[1]], .filename=paste("plots-results-prior-ma-ACN-ref.png"), .path = figures_dir4)
my.ggsave(.plot=plots_results_prior_ma_ACN_3[[1]], .filename=paste("plots-results-prior-ma-ACN-3.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=plots_results_prior_ma_ACN_3[[1]], .filename=paste("plots-results-prior-ma-ACN-3.png"), .path = figures_dir4)

plots_results_prior_ma_ACN_ref
plots_results_noprior_ma_ACN_ref
plots_results_prior_ma_ACN_1
plots_results_prior_ma_ACN_2
plots_results_noprior_ma_ACN_2
plots_results_prior_ma_ACN_3
plots_results_noprior_ma_ACN_3
plots_results_prior_ma_ACN_4
plots_results_noprior_ma_ACN_4

# map(show, function(i) plots_results_prior_ma_ref[[i]])
# map(show, function(i) plots_results_noprior_ma_ref[[i]])
# map(show, function(i) plots_results_prior_ma_4[[i]])
# map(show, function(i) plots_results_noprior_ma_4[[i]])
# map(show, function(i) plots_results_prior_ma_5[[i]])
# map(show, function(i) plots_results_noprior_ma_5[[i]])
```

##### Combined
```{r single-form-analytes-izo-summary-ACN-combined}
fi_temp = tibble(c=1:11, fi=seq(0,1,by=0.1))

izoresults = rbind(prior_ma_ACN_ref$izoresults%>%
                   mutate(method ="prior_ref"),
                 noprior_ma_ACN_ref$izoresults%>%
                   mutate(method ="noprior_ref"),
                prior_ma_ACN_1$izoresults%>%
                   mutate(method ="prior_1"),
                 prior_ma_ACN_2$izoresults%>%
                   mutate(method ="prior_2"),
                 noprior_ma_ACN_2$izoresults%>%
                   mutate(method ="noprior_2"),
                 prior_ma_ACN_3$izoresults%>%
                   mutate(method ="prior_3"),
                 noprior_ma_ACN_3$izoresults%>%
                   mutate(method ="noprior_3"),
                 prior_ma_ACN_4$izoresults%>%
                   mutate(method ="prior_4"),
                 noprior_ma_ACN_4$izoresults%>%
                   mutate(method ="noprior_4")) %>%
  filter(mlog10tr<=log10(100))%>%
  filter(mlog10tr>=log10(5))%>%
  mutate(c = as.numeric(c),
         i=as.integer(i)) %>%
  arrange(i,method,c)%>%
  group_by(i,method) %>%
  summarise(imaxcv = max(CV), imincv = min(CV), aveCV = pracma::trapz(c, CV)/(n()-1)) %>%
  mutate(imaxcv = if_else(imaxcv>1e4,1e4,imaxcv))%>%
  left_join(tibble(i=as.integer(seq(1,nAnalytes*n_rep,1)),logP=logP, Type=NAB)) 
 
p33_1=izoresults %>%
  ggplot(aes(y=method,x=imaxcv))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=imaxcv, color=logP),size=0.5, alpha=0.1)+
  geom_boxplot(aes(y=method,x=imincv),outlier.size = 0, color="lightblue", alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="min(CV), max(CV)", y = "Method")+
  
  coord_cartesian(xlim=c(1,100))+   
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33_2=izoresults %>%
  ggplot(aes(y=method,x=imaxcv))+
  geom_boxplot(outlier.size = 0.5)+
  geom_jitter(aes(y=method, x=imaxcv, color=logP),size=0.5, alpha=0.1)+
  geom_boxplot(aes(y=method,x=imincv),outlier.size = 0, color="lightblue", alpha=0.1)+
    scale_color_continuous(type="viridis")+
  labs(x="min(CV), max(CV)", y = "Method")+
   
  coord_cartesian(xlim=c(100,10000))+    
  scale_x_continuous(trans='log10',
                      breaks=scales::trans_breaks('log10', function(x) 10^x)(c(1, 1e6)),
                      labels=scales::trans_format('log10', scales::math_format(10^.x)))

p33=p33_1+p33_2+
  plot_layout(widths = c(3, 1),axes = "collect")

my.ggsave(.plot=p33+plot_layout(guides = "collect"), .filename=paste("N-ACN-izo-combined-CV.pdf"), .path = figures_dir4)
my.ggsave.png(.plot=p33+plot_layout(guides = "collect"), .filename=paste("N-ACN-izo-combined-CV.png"), .path = figures_dir4)
p33

f44_4 = p33
```

# Manuscript plots

```{r composite-plots}
figure1 <- ((f2_3|f2_4)/(f2_1|f2_2))+
  plot_layout(guides = "collect")+
  plot_annotation(tag_levels = 'A') &
                  theme(legend.position = 'bottom',plot.title = element_text(size = 8),
                                axis.title = element_text(size = 8),
                                axis.text  = element_text(size = 6))
my.ggsave(.plot=figure1, .filename=paste("eficiency_relative.pdf"), .path = figures_dir5)
my.ggsave.png(.plot=figure1, .filename=paste("eficiency_relative.png"), .path = figures_dir5)

figure2 <- ((f3_3|f3_4)/(f3_1|f3_2))+
  plot_layout(guides = "collect")+
  plot_annotation(tag_levels = 'A') &
                  theme(legend.position = 'bottom',plot.title = element_text(size = 8),
                                axis.title = element_text(size = 8),
                                axis.text  = element_text(size = 6))
my.ggsave(.plot=figure2, .filename=paste("eficiency_prior.pdf"), .path = figures_dir5)
my.ggsave.png(.plot=figure2, .filename=paste("eficiency_prior.png"), .path = figures_dir5)

figure3 <- ((f33_3|f33_4)/(f33_1|f33_2))+
  plot_layout(guides = "collect")+
  plot_annotation(tag_levels = list(c("A"," ","B"," ","C"," ","D", ""))) &
                  theme(legend.position = 'bottom',plot.title = element_text(size = 8),
                                axis.title = element_text(size = 8),
                                axis.text  = element_text(size = 6))
my.ggsave(.plot=figure3, .filename=paste("max_standardized_variance.pdf"), .path = figures_dir5)
my.ggsave.png(.plot=figure3, .filename=paste("max_standardized_variance.png"), .path = figures_dir5)
figure4 <- ((f44_3|f44_4)/(f44_1|f44_2))+
  plot_layout(guides = "collect")+
  plot_annotation(tag_levels = list(c("A"," ","B"," ","C"," ","D", ""))) &
                  theme(legend.position = 'bottom',plot.title = element_text(size = 8),
                                axis.title = element_text(size = 8),
                                axis.text  = element_text(size = 6))
my.ggsave(.plot=figure4, .filename=paste("cv_izo.pdf"), .path = figures_dir5)
my.ggsave.png(.plot=figure4, .filename=paste("cv_izo.pdf.png"), .path = figures_dir5)

figure5 <- ((f55_3|f55_4)/(f55_1|f55_2))+
  plot_layout(guides = "collect")+
  plot_annotation(tag_levels = 'A') &
                  theme(legend.position = 'bottom',plot.title = element_text(size = 8),
                                axis.title = element_text(size = 8),
                                axis.text  = element_text(size = 6))
my.ggsave(.plot=figure5, .filename=paste("max_standardized_variance_probability.pdf"), .path = figures_dir5)
my.ggsave.png(.plot=figure5, .filename=paste("max_standardized_variance_probability.png"), .path = figures_dir5)


figure1
figure2
figure3
figure4
figure5
```


```{r save-temp, eval=F}
save.image("results-mixtures-temp.RData")
```

# References {.unnumbered}

::: {#refs}
:::

# Licenses {.unnumbered}

-   Code & copy; 2024, Paweł Wiczling, licensed under BSD-3.
-   Text & copy; 2024, Paweł Wiczling, licensed under CC-BY-NC 4.0.

# Original Computing Environment {.unnumbered}

```{r sessionInfo}
sessionInfo()
```
